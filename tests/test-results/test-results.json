{
  "collection": {
    "_": {
      "postman_id": "dnsniper-api-tests"
    },
    "item": [
      {
        "id": "4dafac33-03a2-4580-8fd9-2464967b86ed",
        "name": "Health Check",
        "request": {
          "url": {
            "path": [
              "api",
              "health"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8e039ee7-6435-4fcd-981f-811b3a734560",
              "type": "text/javascript",
              "exec": [
                "pm.test('Health check returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Health check has correct structure', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('status');",
                "    pm.expect(response).to.have.property('timestamp');",
                "    pm.expect(response).to.have.property('database');",
                "    pm.expect(response).to.have.property('stats');",
                "    pm.expect(response.status).to.eql('healthy');",
                "    pm.expect(response.database).to.eql('connected');",
                "});"
              ],
              "_lastExecutionId": "00fafb15-255e-423d-af50-cedb842b0d28"
            }
          }
        ]
      },
      {
        "id": "c32c43bd-7753-4abe-97c6-a4de47cfe73b",
        "name": "Dashboard Stats",
        "request": {
          "url": {
            "path": [
              "api",
              "dashboard"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "71f02782-7569-4d77-b163-30d27cfa94f2",
              "type": "text/javascript",
              "exec": [
                "pm.test('Dashboard returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Dashboard has correct structure', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('totals');",
                "    pm.expect(response).to.have.property('lists');",
                "    pm.expect(response).to.have.property('sources');",
                "    pm.expect(response).to.have.property('auto_update');",
                "    pm.expect(response).to.have.property('firewall');",
                "    pm.expect(response).to.have.property('activity');",
                "});"
              ],
              "_lastExecutionId": "f1aee09c-9b8f-4543-be29-29ceefdd52c3"
            }
          }
        ]
      },
      {
        "id": "c97e91f9-3044-44a3-a477-cf57ba312c94",
        "name": "Get All Settings",
        "request": {
          "url": {
            "path": [
              "api",
              "settings",
              ""
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8e64cc90-8fa0-4904-82a7-627a76ae7588",
              "type": "text/javascript",
              "exec": [
                "pm.test('Settings returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Settings has required properties', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('auto_update_enabled');",
                "    pm.expect(response).to.have.property('auto_update_interval');",
                "    pm.expect(response).to.have.property('rule_expiration');",
                "    pm.expect(response).to.have.property('max_ips_per_domain');",
                "});"
              ],
              "_lastExecutionId": "7fdabb55-96d1-4ffa-be6d-6b15ca8b80a4"
            }
          }
        ]
      },
      {
        "id": "5fb83ebf-c79c-4681-80df-7b27a2c66d96",
        "name": "Get Firewall Status",
        "request": {
          "url": {
            "path": [
              "api",
              "settings",
              "firewall",
              "status"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "763ee98d-8ee7-4f8c-bf73-89fa341c9a53",
              "type": "text/javascript",
              "exec": [
                "pm.test('Firewall status returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Firewall status has structure', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.be.an('object');",
                "});"
              ],
              "_lastExecutionId": "d0f2dad5-a920-4bee-8c03-9d79da04d0fd"
            }
          }
        ]
      },
      {
        "id": "8f70f683-ac73-47d4-bd07-2c7198bd8888",
        "name": "Get SSL Status",
        "request": {
          "url": {
            "path": [
              "api",
              "settings",
              "ssl",
              "status"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "0bbccbd7-2321-44c5-8b7c-ae37e40e4424",
              "type": "text/javascript",
              "exec": [
                "pm.test('SSL status returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('SSL status has structure', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('enable_ssl');",
                "    pm.expect(response).to.have.property('force_https');",
                "    pm.expect(response).to.have.property('status');",
                "});"
              ],
              "_lastExecutionId": "ba1311b0-700b-4817-a319-805fad88071d"
            }
          }
        ]
      },
      {
        "id": "25bcc47c-03db-4bcc-b501-5a8738f66099",
        "name": "Get All Domains",
        "request": {
          "url": {
            "path": [
              "api",
              "domains",
              ""
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [
              {
                "key": "limit",
                "value": "10"
              }
            ],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "6eca706f-91c5-47e3-9674-5eaca2b4b75f",
              "type": "text/javascript",
              "exec": [
                "pm.test('Get domains returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.be.an('array');",
                "});",
                "",
                "pm.test('Domain objects have correct structure', function () {",
                "    const response = pm.response.json();",
                "    if (response.length > 0) {",
                "        const domain = response[0];",
                "        pm.expect(domain).to.have.property('id');",
                "        pm.expect(domain).to.have.property('domain_name');",
                "        pm.expect(domain).to.have.property('list_type');",
                "        pm.expect(domain).to.have.property('source_type');",
                "        pm.expect(domain).to.have.property('is_cdn');",
                "        pm.expect(domain).to.have.property('ip_count');",
                "    }",
                "});"
              ],
              "_lastExecutionId": "e14c76dd-d513-4b16-a760-7f507727d1d1"
            }
          }
        ]
      },
      {
        "id": "4a977e23-a141-48ce-b6cd-74d8bc6b2ba0",
        "name": "Create Test Domain",
        "request": {
          "url": {
            "path": [
              "api",
              "domains",
              ""
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"domain_name\": \"test-malware.example.com\",\n    \"list_type\": \"blacklist\",\n    \"notes\": \"Test domain for API testing\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c12ce7bc-5bea-4292-b0a1-5cb6f9056550",
              "type": "text/javascript",
              "exec": [
                "pm.test('Create domain returns 200 or 201', function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                "});",
                "",
                "pm.test('Created domain has correct properties', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('id');",
                "    pm.expect(response).to.have.property('domain_name');",
                "    pm.expect(response.domain_name).to.eql('test-malware.example.com');",
                "    pm.expect(response.list_type).to.eql('blacklist');",
                "    pm.expect(response.source_type).to.eql('manual');",
                "    ",
                "    // Store domain ID for cleanup",
                "    pm.environment.set('test_domain_id', response.id);",
                "});"
              ],
              "_lastExecutionId": "6157a77b-6a74-47df-8347-c7cdfe4d82e8"
            }
          }
        ]
      },
      {
        "id": "c4679a5c-8349-418f-9d7d-2a44111af360",
        "name": "Get Specific Domain",
        "request": {
          "url": {
            "path": [
              "api",
              "domains",
              "{{test_domain_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf9a5b65-5fee-4a16-8749-7410ab5122bb",
              "type": "text/javascript",
              "exec": [
                "// Skip if no test domain ID",
                "if (!pm.environment.get('test_domain_id')) {",
                "    pm.execution.skipRequest();",
                "}"
              ],
              "_lastExecutionId": "a8f93115-3fe1-45a3-9fe1-bd19aebad051"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67599df9-40dd-40ae-8381-b44781694aee",
              "type": "text/javascript",
              "exec": [
                "pm.test('Get specific domain returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Domain has correct structure', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('id');",
                "    pm.expect(response).to.have.property('domain_name');",
                "    pm.expect(response.domain_name).to.eql('test-malware.example.com');",
                "});"
              ],
              "_lastExecutionId": "2adb6ef8-7148-4e63-83d9-81d341039033"
            }
          }
        ]
      },
      {
        "id": "31b771e7-71a2-45cb-bac5-7b545294748c",
        "name": "Update Test Domain",
        "request": {
          "url": {
            "path": [
              "api",
              "domains",
              "{{test_domain_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"notes\": \"Updated test domain for API testing\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ba180a2-52e7-47d1-8e79-e0db8d8ab16a",
              "type": "text/javascript",
              "exec": [
                "// Skip if no test domain ID",
                "if (!pm.environment.get('test_domain_id')) {",
                "    pm.execution.skipRequest();",
                "}"
              ],
              "_lastExecutionId": "12daa023-1c1c-4f04-a53b-401f6f7ebedf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b325dc38-c480-403e-b457-eda04af7da10",
              "type": "text/javascript",
              "exec": [
                "pm.test('Update domain returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Domain updated correctly', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response.notes).to.eql('Updated test domain for API testing');",
                "});"
              ],
              "_lastExecutionId": "0cb1dbb1-980f-4932-90f7-886f1d6abc7e"
            }
          }
        ]
      },
      {
        "id": "0c7872a0-a8ca-4424-a3d6-9c2e163f5653",
        "name": "Get Domain IPs",
        "request": {
          "url": {
            "path": [
              "api",
              "domains",
              "{{test_domain_id}}",
              "ips"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44c8eeb0-51dc-4da6-bf66-1a46dcfbfaf1",
              "type": "text/javascript",
              "exec": [
                "// Skip if no test domain ID",
                "if (!pm.environment.get('test_domain_id')) {",
                "    pm.execution.skipRequest();",
                "}"
              ],
              "_lastExecutionId": "63eb343e-dbff-4e89-9c0b-c83501d98da9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "104ce2c8-1cb5-47a3-8073-d063c4c32eaf",
              "type": "text/javascript",
              "exec": [
                "pm.test('Get domain IPs returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.be.an('array');",
                "});"
              ],
              "_lastExecutionId": "a57bbce0-9c40-4b19-8786-09f2cee59e42"
            }
          }
        ]
      },
      {
        "id": "0b83ddc2-45f8-493a-8ca8-4f06a2947d53",
        "name": "Get All IPs",
        "request": {
          "url": {
            "path": [
              "api",
              "ips",
              ""
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [
              {
                "key": "limit",
                "value": "10"
              }
            ],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "2659d6eb-f472-4a51-a2e0-74dd144452a1",
              "type": "text/javascript",
              "exec": [
                "pm.test('Get IPs returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.be.an('array');",
                "});",
                "",
                "pm.test('IP objects have correct structure', function () {",
                "    const response = pm.response.json();",
                "    if (response.length > 0) {",
                "        const ip = response[0];",
                "        pm.expect(ip).to.have.property('id');",
                "        pm.expect(ip).to.have.property('ip_address');",
                "        pm.expect(ip).to.have.property('ip_version');",
                "        pm.expect(ip).to.have.property('list_type');",
                "        pm.expect(ip).to.have.property('source_type');",
                "    }",
                "});"
              ],
              "_lastExecutionId": "b7570bf9-6016-4dff-97a0-976e1b6163e3"
            }
          }
        ]
      },
      {
        "id": "52860d3c-2a5a-434e-b96e-12b701b4c9f5",
        "name": "Create Test IP",
        "request": {
          "url": {
            "path": [
              "api",
              "ips",
              ""
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"ip_address\": \"192.0.2.100\",\n    \"list_type\": \"blacklist\",\n    \"notes\": \"Test IP for API testing\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f2ac6a09-0440-4d96-b554-eac42bfed1e8",
              "type": "text/javascript",
              "exec": [
                "pm.test('Create IP returns 200 or 201', function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                "});",
                "",
                "pm.test('Created IP has correct properties', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('id');",
                "    pm.expect(response).to.have.property('ip_address');",
                "    pm.expect(response.ip_address).to.eql('192.0.2.100');",
                "    pm.expect(response.list_type).to.eql('blacklist');",
                "    pm.expect(response.source_type).to.eql('manual');",
                "    pm.expect(response.ip_version).to.eql(4);",
                "    ",
                "    // Store IP ID for cleanup",
                "    pm.environment.set('test_ip_id', response.id);",
                "});"
              ],
              "_lastExecutionId": "b72fe3f2-3729-4647-a1c3-e53d25d9b48e"
            }
          }
        ]
      },
      {
        "id": "9bd23859-ea72-4927-b586-511080429775",
        "name": "Get All IP Ranges",
        "request": {
          "url": {
            "path": [
              "api",
              "ip-ranges",
              ""
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [
              {
                "key": "limit",
                "value": "10"
              }
            ],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "22f38d4b-a6a3-4320-93b1-6d41aadebc3e",
              "type": "text/javascript",
              "exec": [
                "pm.test('Get IP ranges returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.be.an('array');",
                "});"
              ],
              "_lastExecutionId": "d153c680-4cfd-42b5-b817-b5f8d5d4f1ac"
            }
          }
        ]
      },
      {
        "id": "1e29fa34-50ea-476b-a7d6-a3f2527bf51d",
        "name": "Create Test IP Range",
        "request": {
          "url": {
            "path": [
              "api",
              "ip-ranges",
              ""
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"ip_range\": \"8.8.8.0/28\",\n    \"list_type\": \"blacklist\",\n    \"notes\": \"Test IP range for API testing\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "d2f77fca-f2f7-4509-9774-71960129391b",
              "type": "text/javascript",
              "exec": [
                "pm.test('Create IP range returns 200 or 201', function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                "});",
                "",
                "pm.test('Created IP range has correct properties', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('id');",
                "    pm.expect(response).to.have.property('ip_range');",
                "    pm.expect(response.ip_range).to.eql('8.8.8.0/28');",
                "    pm.expect(response.list_type).to.eql('blacklist');",
                "    pm.expect(response.source_type).to.eql('manual');",
                "    ",
                "    // Store IP range ID for cleanup",
                "    pm.environment.set('test_ip_range_id', response.id);",
                "});"
              ],
              "_lastExecutionId": "71a9873e-036c-4c85-b55f-61c5dc1f34a4"
            }
          }
        ]
      },
      {
        "id": "f5178385-f824-422b-a7f7-9171ffe6c2a5",
        "name": "Get Auto-Update Sources",
        "request": {
          "url": {
            "path": [
              "api",
              "auto-update-sources",
              ""
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "0f3eed82-1212-4be1-8921-957806df7a07",
              "type": "text/javascript",
              "exec": [
                "pm.test('Get auto-update sources returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.be.an('array');",
                "});"
              ],
              "_lastExecutionId": "b23e3986-b15f-435f-a034-391bb725a20b"
            }
          }
        ]
      },
      {
        "id": "b2c069c1-f9ba-4723-9644-43c28909992b",
        "name": "Get Auto-Update Status",
        "request": {
          "url": {
            "path": [
              "api",
              "auto-update-sources",
              "status"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e02b3b53-5a30-4939-a987-fa5dd52ed12d",
              "type": "text/javascript",
              "exec": [
                "pm.test('Get auto-update status returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Status has correct structure', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('enabled');",
                "    pm.expect(response).to.have.property('is_running');",
                "    pm.expect(response).to.have.property('active_sources');",
                "    pm.expect(response).to.have.property('total_sources');",
                "    pm.expect(response).to.have.property('interval');",
                "});"
              ],
              "_lastExecutionId": "cf42c0ec-9bdd-45d0-990d-c6a8a2d2e0b7"
            }
          }
        ]
      },
      {
        "id": "b97d5258-dce6-4e8c-ac6b-6a0ac1f8919c",
        "name": "Create Test Auto-Update Source",
        "request": {
          "url": {
            "path": [
              "api",
              "auto-update-sources",
              ""
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"name\": \"Test Source\",\n    \"url\": \"https://httpbin.org/status/200\",\n    \"is_active\": false,\n    \"list_type\": \"blacklist\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "7fdab709-52e6-43fa-b400-5d02c0a4c42b",
              "type": "text/javascript",
              "exec": [
                "pm.test('Create auto-update source returns 200 or 201', function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                "});",
                "",
                "pm.test('Created source has correct properties', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('id');",
                "    pm.expect(response).to.have.property('name');",
                "    pm.expect(response.name).to.eql('Test Source');",
                "    pm.expect(response.url).to.eql('https://httpbin.org/status/200');",
                "    pm.expect(response.is_active).to.eql(false);",
                "    pm.expect(response.list_type).to.eql('blacklist');",
                "    ",
                "    // Store source ID for cleanup",
                "    pm.environment.set('test_source_id', response.id);",
                "});"
              ],
              "_lastExecutionId": "1b50d639-f87c-4c01-b88d-528a272a189d"
            }
          }
        ]
      },
      {
        "id": "dc9f7947-2016-4c45-84f0-6992a4aecf8a",
        "name": "Test Auto-Update Source",
        "request": {
          "url": {
            "path": [
              "api",
              "auto-update-sources",
              "test",
              "{{test_source_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19627fa9-e046-40a3-96ae-fc285040c19a",
              "type": "text/javascript",
              "exec": [
                "// Skip if no test source ID",
                "if (!pm.environment.get('test_source_id')) {",
                "    pm.execution.skipRequest();",
                "}"
              ],
              "_lastExecutionId": "eea69314-bf49-4dd4-90f5-4b835f2a7264"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc4552f8-49fc-4284-9a40-bbf33a91dbce",
              "type": "text/javascript",
              "exec": [
                "pm.test('Test source returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Test result has correct structure', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('source');",
                "    pm.expect(response).to.have.property('test_result');",
                "    pm.expect(response.test_result).to.have.property('status');",
                "});"
              ],
              "_lastExecutionId": "69a9f0bf-9e8a-46d6-9c46-f90dd297fef0"
            }
          }
        ]
      },
      {
        "id": "4b7ad96f-fe0b-44ce-9a0a-671db6b2c168",
        "name": "Get Auto-Update Stats",
        "request": {
          "url": {
            "path": [
              "api",
              "auto-update-sources",
              "stats",
              "summary"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "d20a7119-ac23-4bae-837b-e4a55eca5f03",
              "type": "text/javascript",
              "exec": [
                "// Test for both scenarios: fixed API (200) and unfixed API (500)",
                "pm.test('Auto-update stats endpoint responds correctly', function () {",
                "    // Accept either 200 (fixed) or 500 (unfixed) until server restart",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 500]);",
                "});",
                "",
                "if (pm.response.code === 200) {",
                "    pm.test('Stats have correct structure (fixed API)', function () {",
                "        const response = pm.response.json();",
                "        pm.expect(response).to.have.property('total_sources');",
                "        pm.expect(response).to.have.property('active_sources');",
                "        pm.expect(response).to.have.property('inactive_sources');",
                "    });",
                "} else if (pm.response.code === 500) {",
                "    pm.test('Known API bug present (needs server restart)', function () {",
                "        const response = pm.response.json();",
                "        pm.expect(response).to.have.property('detail');",
                "        pm.expect(response.detail).to.include('Session');",
                "    });",
                "}"
              ],
              "_lastExecutionId": "ff67a201-f813-431e-87b7-4981b7558bb3"
            }
          }
        ]
      },
      {
        "id": "00d07edf-a17e-4616-880a-ce5cdc2c1b78",
        "name": "Get Logs",
        "request": {
          "url": {
            "path": [
              "api",
              "logs",
              ""
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [
              {
                "key": "limit",
                "value": "10"
              }
            ],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "63c67625-6497-46cc-b11c-48d24c3dea66",
              "type": "text/javascript",
              "exec": [
                "pm.test('Get logs returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.be.an('array');",
                "});",
                "",
                "pm.test('Log objects have correct structure', function () {",
                "    const response = pm.response.json();",
                "    if (response.length > 0) {",
                "        const log = response[0];",
                "        pm.expect(log).to.have.property('id');",
                "        pm.expect(log).to.have.property('message');",
                "        pm.expect(log).to.have.property('created_at');",
                "    }",
                "});"
              ],
              "_lastExecutionId": "1308623e-372e-4160-b66f-65db00ed4d98"
            }
          }
        ]
      },
      {
        "id": "55b2e897-0627-4d10-b326-7c74882a3dbc",
        "name": "Get Log Statistics",
        "request": {
          "url": {
            "path": [
              "api",
              "logs",
              "stats"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5ae77120-ad50-4312-b86e-4abbb640cd67",
              "type": "text/javascript",
              "exec": [
                "pm.test('Get log stats returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Stats have correct structure', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('total_logs');",
                "    pm.expect(response).to.have.property('logs_by_action');",
                "    pm.expect(response).to.have.property('logs_by_rule_type');",
                "    pm.expect(response).to.have.property('recent_logs_24h');",
                "});"
              ],
              "_lastExecutionId": "ba74b660-72ba-47bd-8ada-1217df1a5bc3"
            }
          }
        ]
      },
      {
        "id": "38541313-85db-4e9c-b0f9-77b6ce5726ce",
        "name": "Get Recent Logs",
        "request": {
          "url": {
            "path": [
              "api",
              "logs",
              "recent"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [
              {
                "key": "limit",
                "value": "5"
              }
            ],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "39827d3d-d10f-41ee-a384-47f37295434a",
              "type": "text/javascript",
              "exec": [
                "pm.test('Get recent logs returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.be.an('array');",
                "});"
              ],
              "_lastExecutionId": "da28ac63-9de8-4609-add0-fb694dbc474e"
            }
          }
        ]
      },
      {
        "id": "8b7b2e38-f72e-40fd-a142-485fbdf8ab73",
        "name": "Search Logs",
        "request": {
          "url": {
            "path": [
              "api",
              "logs",
              "search"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [
              {
                "key": "query_text",
                "value": "test"
              },
              {
                "key": "limit",
                "value": "5"
              }
            ],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "75260380-c2b5-4c8f-a6fd-1b2a65f8a91a",
              "type": "text/javascript",
              "exec": [
                "pm.test('Search logs returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.be.an('array');",
                "});"
              ],
              "_lastExecutionId": "11921da5-6227-430c-83be-f73d6ab0324b"
            }
          }
        ]
      },
      {
        "id": "a64400e8-ebcc-47ed-babe-42a071559701",
        "name": "Filter Domains by List Type",
        "request": {
          "url": {
            "path": [
              "api",
              "domains",
              ""
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [
              {
                "key": "list_type",
                "value": "blacklist"
              },
              {
                "key": "limit",
                "value": "5"
              }
            ],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a78a900b-7a06-4968-985d-1d838468e90c",
              "type": "text/javascript",
              "exec": [
                "pm.test('Filter domains returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('All returned domains are blacklist', function () {",
                "    const response = pm.response.json();",
                "    response.forEach(domain => {",
                "        pm.expect(domain.list_type).to.eql('blacklist');",
                "    });",
                "});"
              ],
              "_lastExecutionId": "be9da0a6-aca1-4293-a913-c008b6c3f5c0"
            }
          }
        ]
      },
      {
        "id": "35d089ef-12db-4157-8763-975b71820529",
        "name": "Filter IPs by Source Type",
        "request": {
          "url": {
            "path": [
              "api",
              "ips",
              ""
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [
              {
                "key": "source_type",
                "value": "manual"
              },
              {
                "key": "limit",
                "value": "5"
              }
            ],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e7ce1098-5a9b-42f9-a12d-9a5db4e56086",
              "type": "text/javascript",
              "exec": [
                "pm.test('Filter IPs returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('All returned IPs are manual', function () {",
                "    const response = pm.response.json();",
                "    response.forEach(ip => {",
                "        pm.expect(ip.source_type).to.eql('manual');",
                "    });",
                "});"
              ],
              "_lastExecutionId": "887712db-1c30-4817-a1bf-3ce8e390c205"
            }
          }
        ]
      },
      {
        "id": "0668a649-684a-409f-8c50-7b4384b83de2",
        "name": "Test Invalid Domain Creation",
        "request": {
          "url": {
            "path": [
              "api",
              "domains",
              ""
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"domain_name\": \"\",\n    \"list_type\": \"invalid_type\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "08ceec8a-4f00-42d4-86f1-3fb6936d3ec1",
              "type": "text/javascript",
              "exec": [
                "pm.test('Invalid domain returns 400', function () {",
                "    pm.response.to.have.status(400);",
                "});",
                "",
                "pm.test('Error message is present', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('detail');",
                "});"
              ],
              "_lastExecutionId": "8f41554a-1211-40e3-938a-5ce8112ca6b9"
            }
          }
        ]
      },
      {
        "id": "902a6638-7e27-4a72-833a-dec6aa146d5d",
        "name": "Test Invalid IP Creation",
        "request": {
          "url": {
            "path": [
              "api",
              "ips",
              ""
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"ip_address\": \"invalid.ip.address\",\n    \"list_type\": \"blacklist\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "b0bdb6cb-5cdc-40da-8d7e-69ed88d4de96",
              "type": "text/javascript",
              "exec": [
                "pm.test('Invalid IP returns 400', function () {",
                "    pm.response.to.have.status(400);",
                "});",
                "",
                "pm.test('Error message is present', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('detail');",
                "});"
              ],
              "_lastExecutionId": "2c9f4840-6a83-48d8-bfbd-c7523bc06cca"
            }
          }
        ]
      },
      {
        "id": "61cff08d-ae41-42a2-905c-891e2c0e7cce",
        "name": "Cleanup - Delete Test Domain",
        "request": {
          "url": {
            "path": [
              "api",
              "domains",
              "{{test_domain_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "DELETE"
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aaa0d6dd-a5ab-4c08-96ce-1359e6b5d7c1",
              "type": "text/javascript",
              "exec": [
                "// Skip if no test domain ID",
                "if (!pm.environment.get('test_domain_id')) {",
                "    pm.execution.skipRequest();",
                "}"
              ],
              "_lastExecutionId": "577b601e-ad49-4482-9b3b-57b4bdc96b41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a2fe6c8-cbca-4bee-b9e7-b4683b7cc893",
              "type": "text/javascript",
              "exec": [
                "pm.test('Delete domain returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Success message is present', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('message');",
                "    pm.expect(response.message).to.include('deleted successfully');",
                "});"
              ],
              "_lastExecutionId": "6884a7a3-1aeb-4e5d-b1fc-92764111a017"
            }
          }
        ]
      },
      {
        "id": "536f1868-0678-49c3-9111-c72b1ddfa8bd",
        "name": "Cleanup - Delete Test IP",
        "request": {
          "url": {
            "path": [
              "api",
              "ips",
              "{{test_ip_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "DELETE"
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25475d01-8920-4af4-a312-e14cff059d07",
              "type": "text/javascript",
              "exec": [
                "// Skip if no test IP ID",
                "if (!pm.environment.get('test_ip_id')) {",
                "    pm.execution.skipRequest();",
                "}"
              ],
              "_lastExecutionId": "34d6127a-948d-474e-8bc3-b3411bd746ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6aec1b2-4e53-418a-87f1-7a5c17bd23d6",
              "type": "text/javascript",
              "exec": [
                "pm.test('Delete IP returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Success message is present', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('message');",
                "    pm.expect(response.message).to.include('deleted successfully');",
                "});"
              ],
              "_lastExecutionId": "49e97b81-25ad-4803-b5ca-4d4ac2ae556d"
            }
          }
        ]
      },
      {
        "id": "e804eaf6-106f-4679-8605-7e2fe5e777fd",
        "name": "Cleanup - Delete Test IP Range",
        "request": {
          "url": {
            "path": [
              "api",
              "ip-ranges",
              "{{test_ip_range_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "DELETE"
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "37267fb2-a59f-4496-b166-286d88ac3077",
              "type": "text/javascript",
              "exec": [
                "// Skip if no test IP range ID",
                "if (!pm.environment.get('test_ip_range_id')) {",
                "    pm.execution.skipRequest();",
                "}"
              ],
              "_lastExecutionId": "1e5a48ec-246c-41be-aa97-3d3eecb480c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72c2e912-2ac2-4b8d-8d62-92b8404c82df",
              "type": "text/javascript",
              "exec": [
                "pm.test('Delete IP range returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Success message is present', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('message');",
                "    pm.expect(response.message).to.include('deleted successfully');",
                "});"
              ],
              "_lastExecutionId": "20f703ba-b998-4229-9bf3-974e25a111fe"
            }
          }
        ]
      },
      {
        "id": "36ebeab2-db10-4e9c-b5db-09477a15744d",
        "name": "Cleanup - Delete Test Auto-Update Source",
        "request": {
          "url": {
            "path": [
              "api",
              "auto-update-sources",
              "{{test_source_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "DELETE"
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b08bcda4-0a52-4f71-b695-3f3d350e927c",
              "type": "text/javascript",
              "exec": [
                "// Skip if no test source ID",
                "if (!pm.environment.get('test_source_id')) {",
                "    pm.execution.skipRequest();",
                "}"
              ],
              "_lastExecutionId": "9e520e1a-939d-4cdc-90b2-b572b0296adf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "799b7d6a-bd5e-415b-a411-b11b4913e7a1",
              "type": "text/javascript",
              "exec": [
                "pm.test('Delete source returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Success message is present', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('message');",
                "    pm.expect(response.message).to.include('deleted successfully');",
                "});"
              ],
              "_lastExecutionId": "2e1297e6-0576-4e78-9444-4cd738d8f026"
            }
          }
        ]
      }
    ],
    "auth": {
      "type": "bearer",
      "bearer": [
        {
          "type": "string",
          "value": "{{api_token}}",
          "key": "token"
        }
      ]
    },
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "85508088-60bd-4b3f-ba24-27fb3159fe0f",
          "type": "text/javascript",
          "exec": [
            "// Set base URL if not already set",
            "if (!pm.environment.get('base_url')) {",
            "    pm.environment.set('base_url', 'http://localhost:8000');",
            "}",
            "",
            "// Set API token if not already set",
            "if (!pm.environment.get('api_token')) {",
            "    pm.environment.set('api_token', 'dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk');",
            "}"
          ],
          "_lastExecutionId": "d5824795-7104-4bbe-91f5-3f5eb07140bd"
        }
      }
    ],
    "variable": [
      {
        "type": "string",
        "value": "http://localhost:8000",
        "key": "base_url"
      },
      {
        "type": "string",
        "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
        "key": "api_token"
      }
    ],
    "info": {
      "_postman_id": "dnsniper-api-tests",
      "name": "DNSniper API Tests",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Comprehensive tests for all DNSniper API endpoints",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment"
    },
    "id": "dnsniper-environment",
    "name": "DNSniper API Environment",
    "values": [
      {
        "type": "any",
        "value": "http://localhost:8000",
        "key": "base_url"
      },
      {
        "type": "any",
        "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
        "key": "api_token"
      },
      {
        "type": "any",
        "value": 1,
        "key": "test_domain_id"
      },
      {
        "type": "any",
        "value": 1,
        "key": "test_ip_id"
      },
      {
        "type": "any",
        "value": 1,
        "key": "test_ip_range_id"
      },
      {
        "type": "any",
        "value": 1,
        "key": "test_source_id"
      }
    ]
  },
  "globals": {
    "id": "2a197423-c970-42de-8cf6-bbfb18c863fc",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 31,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 70,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 31,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 31,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 31,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 65,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 31,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 39,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 86.2258064516129,
      "responseMin": 5,
      "responseMax": 1948,
      "responseSd": 344.12682486561783,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1748795358737,
      "completed": 1748795377569
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 31,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9ba79d35-cc2a-48e6-ad56-bdd77b940f85",
          "httpRequestId": "9d176e11-709b-4c92-80ea-f86b3e950df1"
        },
        "item": {
          "id": "4dafac33-03a2-4580-8fd9-2464967b86ed",
          "name": "Health Check",
          "request": {
            "url": {
              "path": [
                "api",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8e039ee7-6435-4fcd-981f-811b3a734560",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Health check returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Health check has correct structure', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('status');",
                  "    pm.expect(response).to.have.property('timestamp');",
                  "    pm.expect(response).to.have.property('database');",
                  "    pm.expect(response).to.have.property('stats');",
                  "    pm.expect(response.status).to.eql('healthy');",
                  "    pm.expect(response.database).to.eql('connected');",
                  "});"
                ],
                "_lastExecutionId": "00fafb15-255e-423d-af50-cedb842b0d28"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "health"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e2b38d85-80ff-43d7-8119-e1ee8c8b938f",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "679ec59d-b366-405b-ad57-1acb7e8d9bdd",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:19 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "134"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              104,
              101,
              97,
              108,
              116,
              104,
              121,
              34,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              49,
              57,
              46,
              50,
              56,
              48,
              49,
              50,
              49,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              98,
              97,
              115,
              101,
              34,
              58,
              34,
              99,
              111,
              110,
              110,
              101,
              99,
              116,
              101,
              100,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              115,
              34,
              58,
              123,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              115,
              34,
              58,
              48,
              44,
              34,
              105,
              112,
              115,
              34,
              58,
              48,
              44,
              34,
              105,
              112,
              95,
              114,
              97,
              110,
              103,
              101,
              115,
              34,
              58,
              48,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 26,
          "responseSize": 134
        },
        "id": "4dafac33-03a2-4580-8fd9-2464967b86ed",
        "assertions": [
          {
            "assertion": "Health check returns 200",
            "skipped": false
          },
          {
            "assertion": "Health check has correct structure",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "6abed896-1101-42bc-b991-0c4712738d78",
          "length": 31,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "095fcf6c-a916-47a2-9b38-5e1262d4c147"
        },
        "item": {
          "id": "c32c43bd-7753-4abe-97c6-a4de47cfe73b",
          "name": "Dashboard Stats",
          "request": {
            "url": {
              "path": [
                "api",
                "dashboard"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "71f02782-7569-4d77-b163-30d27cfa94f2",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Dashboard returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Dashboard has correct structure', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('totals');",
                  "    pm.expect(response).to.have.property('lists');",
                  "    pm.expect(response).to.have.property('sources');",
                  "    pm.expect(response).to.have.property('auto_update');",
                  "    pm.expect(response).to.have.property('firewall');",
                  "    pm.expect(response).to.have.property('activity');",
                  "});"
                ],
                "_lastExecutionId": "f1aee09c-9b8f-4543-be29-29ceefdd52c3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "dashboard"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c39c2e4d-945d-4372-8e64-e5776dcbade3",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "707c162c-6ea2-481f-9d67-86927867173e",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:19 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "847"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              115,
              34,
              58,
              123,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              115,
              34,
              58,
              48,
              44,
              34,
              105,
              112,
              115,
              34,
              58,
              48,
              44,
              34,
              105,
              112,
              95,
              114,
              97,
              110,
              103,
              101,
              115,
              34,
              58,
              48,
              44,
              34,
              97,
              117,
              116,
              111,
              95,
              117,
              112,
              100,
              97,
              116,
              101,
              95,
              115,
              111,
              117,
              114,
              99,
              101,
              115,
              34,
              58,
              48,
              125,
              44,
              34,
              108,
              105,
              115,
              116,
              115,
              34,
              58,
              123,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              34,
              58,
              123,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              115,
              34,
              58,
              48,
              44,
              34,
              105,
              112,
              115,
              34,
              58,
              48,
              44,
              34,
              105,
              112,
              95,
              114,
              97,
              110,
              103,
              101,
              115,
              34,
              58,
              48,
              125,
              44,
              34,
              119,
              104,
              105,
              116,
              101,
              108,
              105,
              115,
              116,
              34,
              58,
              123,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              115,
              34,
              58,
              48,
              44,
              34,
              105,
              112,
              115,
              34,
              58,
              48,
              44,
              34,
              105,
              112,
              95,
              114,
              97,
              110,
              103,
              101,
              115,
              34,
              58,
              48,
              125,
              125,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              115,
              34,
              58,
              123,
              34,
              109,
              97,
              110,
              117,
              97,
              108,
              34,
              58,
              123,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              115,
              34,
              58,
              48,
              44,
              34,
              105,
              112,
              115,
              34,
              58,
              48,
              44,
              34,
              105,
              112,
              95,
              114,
              97,
              110,
              103,
              101,
              115,
              34,
              58,
              48,
              125,
              44,
              34,
              97,
              117,
              116,
              111,
              95,
              117,
              112,
              100,
              97,
              116,
              101,
              34,
              58,
              123,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              115,
              34,
              58,
              48,
              44,
              34,
              105,
              112,
              115,
              34,
              58,
              48,
              44,
              34,
              105,
              112,
              95,
              114,
              97,
              110,
              103,
              101,
              115,
              34,
              58,
              48,
              125,
              125,
              44,
              34,
              97,
              117,
              116,
              111,
              95,
              117,
              112,
              100,
              97,
              116,
              101,
              34,
              58,
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              115,
              111,
              117,
              114,
              99,
              101,
              115,
              34,
              58,
              48,
              44,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              95,
              115,
              111,
              117,
              114,
              99,
              101,
              115,
              34,
              58,
              48,
              44,
              34,
              105,
              115,
              95,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              101,
              110,
              97,
              98,
              108,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              125,
              44,
              34,
              102,
              105,
              114,
              101,
              119,
              97,
              108,
              108,
              34,
              58,
              123,
              34,
              99,
              104,
              97,
              105,
              110,
              115,
              95,
              101,
              120,
              105,
              115,
              116,
              34,
              58,
              123,
              34,
              105,
              112,
              118,
              52,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              105,
              112,
              118,
              54,
              34,
              58,
              116,
              114,
              117,
              101,
              125,
              44,
              34,
              105,
              112,
              115,
              101,
              116,
              115,
              95,
              101,
              120,
              105,
              115,
              116,
              34,
              58,
              123,
              34,
              105,
              112,
              118,
              52,
              34,
              58,
              123,
              34,
              119,
              104,
              105,
              116,
              101,
              108,
              105,
              115,
              116,
              95,
              105,
              112,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              119,
              104,
              105,
              116,
              101,
              108,
              105,
              115,
              116,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              95,
              105,
              112,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              125,
              44,
              34,
              105,
              112,
              118,
              54,
              34,
              58,
              123,
              34,
              119,
              104,
              105,
              116,
              101,
              108,
              105,
              115,
              116,
              95,
              105,
              112,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              119,
              104,
              105,
              116,
              101,
              108,
              105,
              115,
              116,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              95,
              105,
              112,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              125,
              125,
              44,
              34,
              105,
              112,
              115,
              101,
              116,
              95,
              99,
              111,
              117,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              105,
              112,
              118,
              52,
              34,
              58,
              123,
              34,
              119,
              104,
              105,
              116,
              101,
              108,
              105,
              115,
              116,
              95,
              105,
              112,
              34,
              58,
              48,
              44,
              34,
              119,
              104,
              105,
              116,
              101,
              108,
              105,
              115,
              116,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              58,
              48,
              44,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              95,
              105,
              112,
              34,
              58,
              48,
              44,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              58,
              48,
              125,
              44,
              34,
              105,
              112,
              118,
              54,
              34,
              58,
              123,
              34,
              119,
              104,
              105,
              116,
              101,
              108,
              105,
              115,
              116,
              95,
              105,
              112,
              34,
              58,
              48,
              44,
              34,
              119,
              104,
              105,
              116,
              101,
              108,
              105,
              115,
              116,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              58,
              48,
              44,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              95,
              105,
              112,
              34,
              58,
              48,
              44,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              58,
              48,
              125,
              125,
              125,
              44,
              34,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              121,
              34,
              58,
              123,
              34,
              114,
              101,
              99,
              101,
              110,
              116,
              95,
              108,
              111,
              103,
              115,
              95,
              50,
              52,
              104,
              34,
              58,
              52,
              50,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 238,
          "responseSize": 847
        },
        "id": "c32c43bd-7753-4abe-97c6-a4de47cfe73b",
        "assertions": [
          {
            "assertion": "Dashboard returns 200",
            "skipped": false
          },
          {
            "assertion": "Dashboard has correct structure",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "da14b18e-f601-4a01-8ed3-f81102553d23",
          "length": 31,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9009db62-cd49-4ac3-a79e-611e8078b1c6"
        },
        "item": {
          "id": "c97e91f9-3044-44a3-a477-cf57ba312c94",
          "name": "Get All Settings",
          "request": {
            "url": {
              "path": [
                "api",
                "settings",
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8e64cc90-8fa0-4904-82a7-627a76ae7588",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Settings returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Settings has required properties', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('auto_update_enabled');",
                  "    pm.expect(response).to.have.property('auto_update_interval');",
                  "    pm.expect(response).to.have.property('rule_expiration');",
                  "    pm.expect(response).to.have.property('max_ips_per_domain');",
                  "});"
                ],
                "_lastExecutionId": "7fdabb55-96d1-4ffa-be6d-6b15ca8b80a4"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "settings",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "759f1a1f-6bde-48bf-919a-3eac7e6e08ee",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "6ef727c7-2976-4af2-bfc5-00f721575e48",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:20 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "387"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              117,
              116,
              111,
              95,
              117,
              112,
              100,
              97,
              116,
              101,
              95,
              101,
              110,
              97,
              98,
              108,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              97,
              117,
              116,
              111,
              95,
              117,
              112,
              100,
              97,
              116,
              101,
              95,
              105,
              110,
              116,
              101,
              114,
              118,
              97,
              108,
              34,
              58,
              51,
              54,
              48,
              48,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              101,
              120,
              112,
              105,
              114,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              56,
              54,
              52,
              48,
              48,
              44,
              34,
              109,
              97,
              120,
              95,
              105,
              112,
              115,
              95,
              112,
              101,
              114,
              95,
              100,
              111,
              109,
              97,
              105,
              110,
              34,
              58,
              53,
              44,
              34,
              100,
              110,
              115,
              95,
              114,
              101,
              115,
              111,
              108,
              118,
              101,
              114,
              95,
              112,
              114,
              105,
              109,
              97,
              114,
              121,
              34,
              58,
              34,
              49,
              46,
              49,
              46,
              49,
              46,
              49,
              34,
              44,
              34,
              100,
              110,
              115,
              95,
              114,
              101,
              115,
              111,
              108,
              118,
              101,
              114,
              95,
              115,
              101,
              99,
              111,
              110,
              100,
              97,
              114,
              121,
              34,
              58,
              34,
              56,
              46,
              56,
              46,
              56,
              46,
              56,
              34,
              44,
              34,
              109,
              97,
              110,
              117,
              97,
              108,
              95,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              114,
              101,
              115,
              111,
              108,
              117,
              116,
              105,
              111,
              110,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              114,
              97,
              116,
              101,
              95,
              108,
              105,
              109,
              105,
              116,
              95,
              100,
              101,
              108,
              97,
              121,
              34,
              58,
              49,
              46,
              48,
              44,
              34,
              108,
              111,
              103,
              103,
              105,
              110,
              103,
              95,
              101,
              110,
              97,
              98,
              108,
              101,
              100,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              97,
              120,
              95,
              108,
              111,
              103,
              95,
              101,
              110,
              116,
              114,
              105,
              101,
              115,
              34,
              58,
              49,
              48,
              48,
              48,
              48,
              44,
              34,
              108,
              111,
              103,
              95,
              114,
              101,
              116,
              101,
              110,
              116,
              105,
              111,
              110,
              95,
              100,
              97,
              121,
              115,
              34,
              58,
              55,
              44,
              34,
              101,
              110,
              97,
              98,
              108,
              101,
              95,
              115,
              115,
              108,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              102,
              111,
              114,
              99,
              101,
              95,
              104,
              116,
              116,
              112,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              115,
              115,
              108,
              95,
              100,
              111,
              109,
              97,
              105,
              110,
              34,
              58,
              34,
              34,
              44,
              34,
              115,
              115,
              108,
              95,
              99,
              101,
              114,
              116,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              34,
              44,
              34,
              115,
              115,
              108,
              95,
              107,
              101,
              121,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 7,
          "responseSize": 387
        },
        "id": "c97e91f9-3044-44a3-a477-cf57ba312c94",
        "assertions": [
          {
            "assertion": "Settings returns 200",
            "skipped": false
          },
          {
            "assertion": "Settings has required properties",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "59abb054-ace6-4cc6-bd7d-99109f74cd95",
          "length": 31,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ac9b2694-2550-4211-884f-f28b7b9419dc"
        },
        "item": {
          "id": "5fb83ebf-c79c-4681-80df-7b27a2c66d96",
          "name": "Get Firewall Status",
          "request": {
            "url": {
              "path": [
                "api",
                "settings",
                "firewall",
                "status"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "763ee98d-8ee7-4f8c-bf73-89fa341c9a53",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Firewall status returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Firewall status has structure', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('object');",
                  "});"
                ],
                "_lastExecutionId": "d0f2dad5-a920-4bee-8c03-9d79da04d0fd"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "settings",
              "firewall",
              "status"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "38dd1892-7458-4889-9468-ec15e7847d7d",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "3e9788fb-cae4-42ef-98aa-e531bdd45fd1",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:20 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "432"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              104,
              97,
              105,
              110,
              115,
              95,
              101,
              120,
              105,
              115,
              116,
              34,
              58,
              123,
              34,
              105,
              112,
              118,
              52,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              105,
              112,
              118,
              54,
              34,
              58,
              116,
              114,
              117,
              101,
              125,
              44,
              34,
              105,
              112,
              115,
              101,
              116,
              115,
              95,
              101,
              120,
              105,
              115,
              116,
              34,
              58,
              123,
              34,
              105,
              112,
              118,
              52,
              34,
              58,
              123,
              34,
              119,
              104,
              105,
              116,
              101,
              108,
              105,
              115,
              116,
              95,
              105,
              112,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              119,
              104,
              105,
              116,
              101,
              108,
              105,
              115,
              116,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              95,
              105,
              112,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              125,
              44,
              34,
              105,
              112,
              118,
              54,
              34,
              58,
              123,
              34,
              119,
              104,
              105,
              116,
              101,
              108,
              105,
              115,
              116,
              95,
              105,
              112,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              119,
              104,
              105,
              116,
              101,
              108,
              105,
              115,
              116,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              95,
              105,
              112,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              125,
              125,
              44,
              34,
              105,
              112,
              115,
              101,
              116,
              95,
              99,
              111,
              117,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              105,
              112,
              118,
              52,
              34,
              58,
              123,
              34,
              119,
              104,
              105,
              116,
              101,
              108,
              105,
              115,
              116,
              95,
              105,
              112,
              34,
              58,
              48,
              44,
              34,
              119,
              104,
              105,
              116,
              101,
              108,
              105,
              115,
              116,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              58,
              48,
              44,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              95,
              105,
              112,
              34,
              58,
              48,
              44,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              58,
              48,
              125,
              44,
              34,
              105,
              112,
              118,
              54,
              34,
              58,
              123,
              34,
              119,
              104,
              105,
              116,
              101,
              108,
              105,
              115,
              116,
              95,
              105,
              112,
              34,
              58,
              48,
              44,
              34,
              119,
              104,
              105,
              116,
              101,
              108,
              105,
              115,
              116,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              58,
              48,
              44,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              95,
              105,
              112,
              34,
              58,
              48,
              44,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              58,
              48,
              125,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 216,
          "responseSize": 432
        },
        "id": "5fb83ebf-c79c-4681-80df-7b27a2c66d96",
        "assertions": [
          {
            "assertion": "Firewall status returns 200",
            "skipped": false
          },
          {
            "assertion": "Firewall status has structure",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d26d7886-9506-4ccb-9e70-c5bd791731cb",
          "length": 31,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3a85e7f1-ec4d-4ba5-904f-79f18a49840e"
        },
        "item": {
          "id": "8f70f683-ac73-47d4-bd07-2c7198bd8888",
          "name": "Get SSL Status",
          "request": {
            "url": {
              "path": [
                "api",
                "settings",
                "ssl",
                "status"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0bbccbd7-2321-44c5-8b7c-ae37e40e4424",
                "type": "text/javascript",
                "exec": [
                  "pm.test('SSL status returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('SSL status has structure', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('enable_ssl');",
                  "    pm.expect(response).to.have.property('force_https');",
                  "    pm.expect(response).to.have.property('status');",
                  "});"
                ],
                "_lastExecutionId": "ba1311b0-700b-4817-a319-805fad88071d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "settings",
              "ssl",
              "status"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "21d37c86-319a-48bb-ae87-30690718d93b",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "2e11af8b-f0a3-4863-b2dd-c910acc0863e",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:21 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "252"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              110,
              97,
              98,
              108,
              101,
              95,
              115,
              115,
              108,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              102,
              111,
              114,
              99,
              101,
              95,
              104,
              116,
              116,
              112,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              115,
              115,
              108,
              95,
              100,
              111,
              109,
              97,
              105,
              110,
              34,
              58,
              34,
              34,
              44,
              34,
              115,
              115,
              108,
              95,
              99,
              101,
              114,
              116,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              34,
              44,
              34,
              115,
              115,
              108,
              95,
              107,
              101,
              121,
              102,
              105,
              108,
              101,
              34,
              58,
              34,
              34,
              44,
              34,
              99,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              95,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              95,
              101,
              120,
              105,
              115,
              116,
              34,
              58,
              123,
              34,
              99,
              101,
              114,
              116,
              102,
              105,
              108,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              107,
              101,
              121,
              102,
              105,
              108,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125,
              44,
              34,
              115,
              115,
              108,
              95,
              101,
              110,
              97,
              98,
              108,
              101,
              100,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              95,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              91,
              93,
              44,
              34,
              119,
              97,
              114,
              110,
              105,
              110,
              103,
              115,
              34,
              58,
              91,
              93,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              83,
              83,
              76,
              32,
              100,
              105,
              115,
              97,
              98,
              108,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 252
        },
        "id": "8f70f683-ac73-47d4-bd07-2c7198bd8888",
        "assertions": [
          {
            "assertion": "SSL status returns 200",
            "skipped": false
          },
          {
            "assertion": "SSL status has structure",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "80a768ad-0e66-4cc0-8786-7d2b627c665c",
          "length": 31,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "db47f395-dc79-482e-b3dc-d0da3110eefe"
        },
        "item": {
          "id": "25bcc47c-03db-4bcc-b501-5a8738f66099",
          "name": "Get All Domains",
          "request": {
            "url": {
              "path": [
                "api",
                "domains",
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6eca706f-91c5-47e3-9674-5eaca2b4b75f",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Get domains returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});",
                  "",
                  "pm.test('Domain objects have correct structure', function () {",
                  "    const response = pm.response.json();",
                  "    if (response.length > 0) {",
                  "        const domain = response[0];",
                  "        pm.expect(domain).to.have.property('id');",
                  "        pm.expect(domain).to.have.property('domain_name');",
                  "        pm.expect(domain).to.have.property('list_type');",
                  "        pm.expect(domain).to.have.property('source_type');",
                  "        pm.expect(domain).to.have.property('is_cdn');",
                  "        pm.expect(domain).to.have.property('ip_count');",
                  "    }",
                  "});"
                ],
                "_lastExecutionId": "e14c76dd-d513-4b16-a760-7f507727d1d1"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "domains",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "limit",
                "value": "10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3048a293-b0de-4084-a0bd-ec691c09e2f0",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "f80375b0-b25c-465c-bc12-42561b619c1b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:22 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "2"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              93
            ]
          },
          "cookie": [],
          "responseTime": 7,
          "responseSize": 2
        },
        "id": "25bcc47c-03db-4bcc-b501-5a8738f66099",
        "assertions": [
          {
            "assertion": "Get domains returns 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false
          },
          {
            "assertion": "Domain objects have correct structure",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "6c6c6721-309d-4073-9102-80365ca43469",
          "length": 31,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "34e418f9-d6cb-4f57-aa62-6b7cd3dbda01"
        },
        "item": {
          "id": "4a977e23-a141-48ce-b6cd-74d8bc6b2ba0",
          "name": "Create Test Domain",
          "request": {
            "url": {
              "path": [
                "api",
                "domains",
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"domain_name\": \"test-malware.example.com\",\n    \"list_type\": \"blacklist\",\n    \"notes\": \"Test domain for API testing\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c12ce7bc-5bea-4292-b0a1-5cb6f9056550",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Create domain returns 200 or 201', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "});",
                  "",
                  "pm.test('Created domain has correct properties', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('domain_name');",
                  "    pm.expect(response.domain_name).to.eql('test-malware.example.com');",
                  "    pm.expect(response.list_type).to.eql('blacklist');",
                  "    pm.expect(response.source_type).to.eql('manual');",
                  "    ",
                  "    // Store domain ID for cleanup",
                  "    pm.environment.set('test_domain_id', response.id);",
                  "});"
                ],
                "_lastExecutionId": "6157a77b-6a74-47df-8347-c7cdfe4d82e8"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "domains",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b74c613c-b518-4885-a7bd-0fcf3bf58a56",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "123",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"domain_name\": \"test-malware.example.com\",\n    \"list_type\": \"blacklist\",\n    \"notes\": \"Test domain for API testing\"\n}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "8aac1f2d-2614-4943-a441-d010faa2bfc2",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:22 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "268"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              45,
              109,
              97,
              108,
              119,
              97,
              114,
              101,
              46,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              108,
              105,
              115,
              116,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              97,
              110,
              117,
              97,
              108,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              117,
              114,
              108,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              105,
              115,
              95,
              99,
              100,
              110,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              50,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              50,
              34,
              44,
              34,
              110,
              111,
              116,
              101,
              115,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              32,
              100,
              111,
              109,
              97,
              105,
              110,
              32,
              102,
              111,
              114,
              32,
              65,
              80,
              73,
              32,
              116,
              101,
              115,
              116,
              105,
              110,
              103,
              34,
              44,
              34,
              105,
              112,
              95,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 268
        },
        "id": "4a977e23-a141-48ce-b6cd-74d8bc6b2ba0",
        "assertions": [
          {
            "assertion": "Create domain returns 200 or 201",
            "skipped": false
          },
          {
            "assertion": "Created domain has correct properties",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0259f5b3-121d-4a9c-b265-409a263dcab3",
          "length": 31,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "377ab85d-41b3-4f87-bcfc-6d69d12cce15"
        },
        "item": {
          "id": "c4679a5c-8349-418f-9d7d-2a44111af360",
          "name": "Get Specific Domain",
          "request": {
            "url": {
              "path": [
                "api",
                "domains",
                "{{test_domain_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "bf9a5b65-5fee-4a16-8749-7410ab5122bb",
                "type": "text/javascript",
                "exec": [
                  "// Skip if no test domain ID",
                  "if (!pm.environment.get('test_domain_id')) {",
                  "    pm.execution.skipRequest();",
                  "}"
                ],
                "_lastExecutionId": "a8f93115-3fe1-45a3-9fe1-bd19aebad051"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "67599df9-40dd-40ae-8381-b44781694aee",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Get specific domain returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Domain has correct structure', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('domain_name');",
                  "    pm.expect(response.domain_name).to.eql('test-malware.example.com');",
                  "});"
                ],
                "_lastExecutionId": "2adb6ef8-7148-4e63-83d9-81d341039033"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "domains",
              "1"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "31459b06-b3c6-420a-93d1-9c87f6a8a186",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "9dd8e07d-2a7a-4881-a734-8189404feefa",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:23 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "268"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              45,
              109,
              97,
              108,
              119,
              97,
              114,
              101,
              46,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              108,
              105,
              115,
              116,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              97,
              110,
              117,
              97,
              108,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              117,
              114,
              108,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              105,
              115,
              95,
              99,
              100,
              110,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              50,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              50,
              34,
              44,
              34,
              110,
              111,
              116,
              101,
              115,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              32,
              100,
              111,
              109,
              97,
              105,
              110,
              32,
              102,
              111,
              114,
              32,
              65,
              80,
              73,
              32,
              116,
              101,
              115,
              116,
              105,
              110,
              103,
              34,
              44,
              34,
              105,
              112,
              95,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 268
        },
        "id": "c4679a5c-8349-418f-9d7d-2a44111af360",
        "assertions": [
          {
            "assertion": "Get specific domain returns 200",
            "skipped": false
          },
          {
            "assertion": "Domain has correct structure",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9a62ac7e-f2f7-471d-96d5-a7a5da821987",
          "length": 31,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d4ff0e29-feaf-41ec-a8a9-8fbcef916863"
        },
        "item": {
          "id": "31b771e7-71a2-45cb-bac5-7b545294748c",
          "name": "Update Test Domain",
          "request": {
            "url": {
              "path": [
                "api",
                "domains",
                "{{test_domain_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"notes\": \"Updated test domain for API testing\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "3ba180a2-52e7-47d1-8e79-e0db8d8ab16a",
                "type": "text/javascript",
                "exec": [
                  "// Skip if no test domain ID",
                  "if (!pm.environment.get('test_domain_id')) {",
                  "    pm.execution.skipRequest();",
                  "}"
                ],
                "_lastExecutionId": "12daa023-1c1c-4f04-a53b-401f6f7ebedf"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "b325dc38-c480-403e-b457-eda04af7da10",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Update domain returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Domain updated correctly', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.notes).to.eql('Updated test domain for API testing');",
                  "});"
                ],
                "_lastExecutionId": "0cb1dbb1-980f-4932-90f7-886f1d6abc7e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "domains",
              "1"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "659118f6-1f2a-4b40-bfa8-20ad1ea8d7ff",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "54",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"notes\": \"Updated test domain for API testing\"\n}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "7a5c059e-a550-4a08-be09-4a39bd7486be",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:23 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "283"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              45,
              109,
              97,
              108,
              119,
              97,
              114,
              101,
              46,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              108,
              105,
              115,
              116,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              97,
              110,
              117,
              97,
              108,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              117,
              114,
              108,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              105,
              115,
              95,
              99,
              100,
              110,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              50,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              51,
              46,
              57,
              56,
              51,
              54,
              55,
              57,
              34,
              44,
              34,
              110,
              111,
              116,
              101,
              115,
              34,
              58,
              34,
              85,
              112,
              100,
              97,
              116,
              101,
              100,
              32,
              116,
              101,
              115,
              116,
              32,
              100,
              111,
              109,
              97,
              105,
              110,
              32,
              102,
              111,
              114,
              32,
              65,
              80,
              73,
              32,
              116,
              101,
              115,
              116,
              105,
              110,
              103,
              34,
              44,
              34,
              105,
              112,
              95,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 11,
          "responseSize": 283
        },
        "id": "31b771e7-71a2-45cb-bac5-7b545294748c",
        "assertions": [
          {
            "assertion": "Update domain returns 200",
            "skipped": false
          },
          {
            "assertion": "Domain updated correctly",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "88e5aa3a-a0b4-4998-bc80-438c3399aef0",
          "length": 31,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e2f8fdee-0226-4515-9471-c54bd516d220"
        },
        "item": {
          "id": "0c7872a0-a8ca-4424-a3d6-9c2e163f5653",
          "name": "Get Domain IPs",
          "request": {
            "url": {
              "path": [
                "api",
                "domains",
                "{{test_domain_id}}",
                "ips"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "44c8eeb0-51dc-4da6-bf66-1a46dcfbfaf1",
                "type": "text/javascript",
                "exec": [
                  "// Skip if no test domain ID",
                  "if (!pm.environment.get('test_domain_id')) {",
                  "    pm.execution.skipRequest();",
                  "}"
                ],
                "_lastExecutionId": "63eb343e-dbff-4e89-9c0b-c83501d98da9"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "104ce2c8-1cb5-47a3-8073-d063c4c32eaf",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Get domain IPs returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "a57bbce0-9c40-4b19-8786-09f2cee59e42"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "domains",
              "1",
              "ips"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ab8cc169-d462-4a94-b5e8-2b752e0c92f3",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "d632a101-b1d9-4aa9-a3bc-f3576ea747b2",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:24 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "2"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              93
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 2
        },
        "id": "0c7872a0-a8ca-4424-a3d6-9c2e163f5653",
        "assertions": [
          {
            "assertion": "Get domain IPs returns 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f8c0daff-5c7b-44ba-9d6f-4bb48f149479",
          "length": 31,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7b8c0ad7-b8e0-47fa-a877-0243a3770d5e"
        },
        "item": {
          "id": "0b83ddc2-45f8-493a-8ca8-4f06a2947d53",
          "name": "Get All IPs",
          "request": {
            "url": {
              "path": [
                "api",
                "ips",
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2659d6eb-f472-4a51-a2e0-74dd144452a1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Get IPs returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});",
                  "",
                  "pm.test('IP objects have correct structure', function () {",
                  "    const response = pm.response.json();",
                  "    if (response.length > 0) {",
                  "        const ip = response[0];",
                  "        pm.expect(ip).to.have.property('id');",
                  "        pm.expect(ip).to.have.property('ip_address');",
                  "        pm.expect(ip).to.have.property('ip_version');",
                  "        pm.expect(ip).to.have.property('list_type');",
                  "        pm.expect(ip).to.have.property('source_type');",
                  "    }",
                  "});"
                ],
                "_lastExecutionId": "b7570bf9-6016-4dff-97a0-976e1b6163e3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "ips",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "limit",
                "value": "10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8131601f-7d67-4e46-aee4-9bac89a715a6",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "4ef82250-6a49-4d0c-b1e9-d42cd3670390",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:24 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "2"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              93
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 2
        },
        "id": "0b83ddc2-45f8-493a-8ca8-4f06a2947d53",
        "assertions": [
          {
            "assertion": "Get IPs returns 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false
          },
          {
            "assertion": "IP objects have correct structure",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0c77aad0-ac32-4e8d-b3c5-e7414be5cd2d",
          "length": 31,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ed1bf51a-013d-4c52-aa86-6da480db5730"
        },
        "item": {
          "id": "52860d3c-2a5a-434e-b96e-12b701b4c9f5",
          "name": "Create Test IP",
          "request": {
            "url": {
              "path": [
                "api",
                "ips",
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ip_address\": \"192.0.2.100\",\n    \"list_type\": \"blacklist\",\n    \"notes\": \"Test IP for API testing\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f2ac6a09-0440-4d96-b554-eac42bfed1e8",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Create IP returns 200 or 201', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "});",
                  "",
                  "pm.test('Created IP has correct properties', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('ip_address');",
                  "    pm.expect(response.ip_address).to.eql('192.0.2.100');",
                  "    pm.expect(response.list_type).to.eql('blacklist');",
                  "    pm.expect(response.source_type).to.eql('manual');",
                  "    pm.expect(response.ip_version).to.eql(4);",
                  "    ",
                  "    // Store IP ID for cleanup",
                  "    pm.environment.set('test_ip_id', response.id);",
                  "});"
                ],
                "_lastExecutionId": "b72fe3f2-3729-4647-a1c3-e53d25d9b48e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "ips",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "00fce27e-0408-4d90-b735-25469e53c557",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "105",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"ip_address\": \"192.0.2.100\",\n    \"list_type\": \"blacklist\",\n    \"notes\": \"Test IP for API testing\"\n}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "d768e400-7dbf-4855-951b-2775dd32deb9",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:25 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "254"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              34,
              49,
              57,
              50,
              46,
              48,
              46,
              50,
              46,
              49,
              48,
              48,
              34,
              44,
              34,
              105,
              112,
              95,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              52,
              44,
              34,
              108,
              105,
              115,
              116,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              97,
              110,
              117,
              97,
              108,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              117,
              114,
              108,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              105,
              100,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              53,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              53,
              34,
              44,
              34,
              110,
              111,
              116,
              101,
              115,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              32,
              73,
              80,
              32,
              102,
              111,
              114,
              32,
              65,
              80,
              73,
              32,
              116,
              101,
              115,
              116,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 20,
          "responseSize": 254
        },
        "id": "52860d3c-2a5a-434e-b96e-12b701b4c9f5",
        "assertions": [
          {
            "assertion": "Create IP returns 200 or 201",
            "skipped": false
          },
          {
            "assertion": "Created IP has correct properties",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "41e1850c-68c8-4e10-90b2-0b3210dbeba4",
          "length": 31,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "aca1e3a9-0375-481b-8308-957ee9a55654"
        },
        "item": {
          "id": "9bd23859-ea72-4927-b586-511080429775",
          "name": "Get All IP Ranges",
          "request": {
            "url": {
              "path": [
                "api",
                "ip-ranges",
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "22f38d4b-a6a3-4320-93b1-6d41aadebc3e",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Get IP ranges returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "d153c680-4cfd-42b5-b817-b5f8d5d4f1ac"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "ip-ranges",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "limit",
                "value": "10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1ee95c26-0084-4cfa-99ed-b81ebd58e515",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "3b9aee37-a653-41e8-bd64-7e21ceb83edf",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:25 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "2"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              93
            ]
          },
          "cookie": [],
          "responseTime": 5,
          "responseSize": 2
        },
        "id": "9bd23859-ea72-4927-b586-511080429775",
        "assertions": [
          {
            "assertion": "Get IP ranges returns 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "30192a07-2855-4e33-909b-6cd65fedc95c",
          "length": 31,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c3849cfd-6c02-4c24-bf05-32249f183e26"
        },
        "item": {
          "id": "1e29fa34-50ea-476b-a7d6-a3f2527bf51d",
          "name": "Create Test IP Range",
          "request": {
            "url": {
              "path": [
                "api",
                "ip-ranges",
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ip_range\": \"8.8.8.0/28\",\n    \"list_type\": \"blacklist\",\n    \"notes\": \"Test IP range for API testing\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d2f77fca-f2f7-4509-9774-71960129391b",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Create IP range returns 200 or 201', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "});",
                  "",
                  "pm.test('Created IP range has correct properties', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('ip_range');",
                  "    pm.expect(response.ip_range).to.eql('8.8.8.0/28');",
                  "    pm.expect(response.list_type).to.eql('blacklist');",
                  "    pm.expect(response.source_type).to.eql('manual');",
                  "    ",
                  "    // Store IP range ID for cleanup",
                  "    pm.environment.set('test_ip_range_id', response.id);",
                  "});"
                ],
                "_lastExecutionId": "71a9873e-036c-4c85-b55f-61c5dc1f34a4"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "ip-ranges",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "33a612a9-2cca-444c-8079-4dd24a68936d",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "108",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"ip_range\": \"8.8.8.0/28\",\n    \"list_type\": \"blacklist\",\n    \"notes\": \"Test IP range for API testing\"\n}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "c0437114-8e13-4371-9aff-6c1c9fb0a2d1",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:26 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "240"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              44,
              34,
              105,
              112,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              58,
              34,
              56,
              46,
              56,
              46,
              56,
              46,
              48,
              47,
              50,
              56,
              34,
              44,
              34,
              105,
              112,
              95,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              52,
              44,
              34,
              108,
              105,
              115,
              116,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              97,
              110,
              117,
              97,
              108,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              117,
              114,
              108,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              54,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              54,
              34,
              44,
              34,
              110,
              111,
              116,
              101,
              115,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              32,
              73,
              80,
              32,
              114,
              97,
              110,
              103,
              101,
              32,
              102,
              111,
              114,
              32,
              65,
              80,
              73,
              32,
              116,
              101,
              115,
              116,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 22,
          "responseSize": 240
        },
        "id": "1e29fa34-50ea-476b-a7d6-a3f2527bf51d",
        "assertions": [
          {
            "assertion": "Create IP range returns 200 or 201",
            "skipped": false
          },
          {
            "assertion": "Created IP range has correct properties",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3f048487-6487-482f-ae00-67e73233d920",
          "length": 31,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "51cce5c4-0deb-46e9-bf36-a43319df67aa"
        },
        "item": {
          "id": "f5178385-f824-422b-a7f7-9171ffe6c2a5",
          "name": "Get Auto-Update Sources",
          "request": {
            "url": {
              "path": [
                "api",
                "auto-update-sources",
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0f3eed82-1212-4be1-8921-957806df7a07",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Get auto-update sources returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "b23e3986-b15f-435f-a034-391bb725a20b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "auto-update-sources",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fd64c1da-5f1f-4a4c-b5fa-b5fbaa4c1584",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "ddb5632f-2b5e-4477-b46b-f8828ad66c35",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:26 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "2"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              93
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 2
        },
        "id": "f5178385-f824-422b-a7f7-9171ffe6c2a5",
        "assertions": [
          {
            "assertion": "Get auto-update sources returns 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "47d7a5bb-d5a4-43ca-8910-b44ce1bf15a1",
          "length": 31,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "34d97c6d-57a2-46b3-a25e-fcd756573b3c"
        },
        "item": {
          "id": "b2c069c1-f9ba-4723-9644-43c28909992b",
          "name": "Get Auto-Update Status",
          "request": {
            "url": {
              "path": [
                "api",
                "auto-update-sources",
                "status"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e02b3b53-5a30-4939-a987-fa5dd52ed12d",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Get auto-update status returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Status has correct structure', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('enabled');",
                  "    pm.expect(response).to.have.property('is_running');",
                  "    pm.expect(response).to.have.property('active_sources');",
                  "    pm.expect(response).to.have.property('total_sources');",
                  "    pm.expect(response).to.have.property('interval');",
                  "});"
                ],
                "_lastExecutionId": "cf42c0ec-9bdd-45d0-990d-c6a8a2d2e0b7"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "auto-update-sources",
              "status"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f5683642-a1b2-4c0c-9c81-e6545ad4aecc",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "712325b8-4fa9-4ce4-98cb-f952acac8c88",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:27 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "88"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              110,
              97,
              98,
              108,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              105,
              115,
              95,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              95,
              115,
              111,
              117,
              114,
              99,
              101,
              115,
              34,
              58,
              48,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              115,
              111,
              117,
              114,
              99,
              101,
              115,
              34,
              58,
              48,
              44,
              34,
              105,
              110,
              116,
              101,
              114,
              118,
              97,
              108,
              34,
              58,
              51,
              54,
              48,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 7,
          "responseSize": 88
        },
        "id": "b2c069c1-f9ba-4723-9644-43c28909992b",
        "assertions": [
          {
            "assertion": "Get auto-update status returns 200",
            "skipped": false
          },
          {
            "assertion": "Status has correct structure",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a00731e6-6013-4204-9464-1c4ff9ef4530",
          "length": 31,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "468d0479-91c7-44db-a8c5-f76f03d13e6d"
        },
        "item": {
          "id": "b97d5258-dce6-4e8c-ac6b-6a0ac1f8919c",
          "name": "Create Test Auto-Update Source",
          "request": {
            "url": {
              "path": [
                "api",
                "auto-update-sources",
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test Source\",\n    \"url\": \"https://httpbin.org/status/200\",\n    \"is_active\": false,\n    \"list_type\": \"blacklist\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7fdab709-52e6-43fa-b400-5d02c0a4c42b",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Create auto-update source returns 200 or 201', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "});",
                  "",
                  "pm.test('Created source has correct properties', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('name');",
                  "    pm.expect(response.name).to.eql('Test Source');",
                  "    pm.expect(response.url).to.eql('https://httpbin.org/status/200');",
                  "    pm.expect(response.is_active).to.eql(false);",
                  "    pm.expect(response.list_type).to.eql('blacklist');",
                  "    ",
                  "    // Store source ID for cleanup",
                  "    pm.environment.set('test_source_id', response.id);",
                  "});"
                ],
                "_lastExecutionId": "1b50d639-f87c-4c01-b88d-528a272a189d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "auto-update-sources",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d37a7a5b-861f-434e-96ed-2c92330a64d4",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "128",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"name\": \"Test Source\",\n    \"url\": \"https://httpbin.org/status/200\",\n    \"is_active\": false,\n    \"list_type\": \"blacklist\"\n}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "ecf6f97e-eb04-429b-9528-3f9b09b9ab4d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:27 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "234"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              32,
              83,
              111,
              117,
              114,
              99,
              101,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              104,
              116,
              116,
              112,
              98,
              105,
              110,
              46,
              111,
              114,
              103,
              47,
              115,
              116,
              97,
              116,
              117,
              115,
              47,
              50,
              48,
              48,
              34,
              44,
              34,
              105,
              115,
              95,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              108,
              105,
              115,
              116,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              117,
              112,
              100,
              97,
              116,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              95,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              48,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              56,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              56,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 8,
          "responseSize": 234
        },
        "id": "b97d5258-dce6-4e8c-ac6b-6a0ac1f8919c",
        "assertions": [
          {
            "assertion": "Create auto-update source returns 200 or 201",
            "skipped": false
          },
          {
            "assertion": "Created source has correct properties",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "31a85dcf-272c-4ea7-a5f6-9f221516ef2a",
          "length": 31,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "59777d64-3717-4ad4-9518-7d6313b9df9a"
        },
        "item": {
          "id": "dc9f7947-2016-4c45-84f0-6992a4aecf8a",
          "name": "Test Auto-Update Source",
          "request": {
            "url": {
              "path": [
                "api",
                "auto-update-sources",
                "test",
                "{{test_source_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "19627fa9-e046-40a3-96ae-fc285040c19a",
                "type": "text/javascript",
                "exec": [
                  "// Skip if no test source ID",
                  "if (!pm.environment.get('test_source_id')) {",
                  "    pm.execution.skipRequest();",
                  "}"
                ],
                "_lastExecutionId": "eea69314-bf49-4dd4-90f5-4b835f2a7264"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "fc4552f8-49fc-4284-9a40-bbf33a91dbce",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Test source returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Test result has correct structure', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('source');",
                  "    pm.expect(response).to.have.property('test_result');",
                  "    pm.expect(response.test_result).to.have.property('status');",
                  "});"
                ],
                "_lastExecutionId": "69a9f0bf-9e8a-46d6-9c46-f90dd297fef0"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "auto-update-sources",
              "test",
              "1"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "545df8b6-6a62-406a-9dd0-0633863842bd",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "c5132fbd-7645-47b5-a7d3-17f923382f6b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:28 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "193"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              32,
              83,
              111,
              117,
              114,
              99,
              101,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              104,
              116,
              116,
              112,
              98,
              105,
              110,
              46,
              111,
              114,
              103,
              47,
              115,
              116,
              97,
              116,
              117,
              115,
              47,
              50,
              48,
              48,
              34,
              125,
              44,
              34,
              116,
              101,
              115,
              116,
              95,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              104,
              116,
              116,
              112,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              50,
              48,
              48,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              95,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              48,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              104,
              116,
              109,
              108,
              59,
              32,
              99,
              104,
              97,
              114,
              115,
              101,
              116,
              61,
              117,
              116,
              102,
              45,
              56,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1948,
          "responseSize": 193
        },
        "id": "dc9f7947-2016-4c45-84f0-6992a4aecf8a",
        "assertions": [
          {
            "assertion": "Test source returns 200",
            "skipped": false
          },
          {
            "assertion": "Test result has correct structure",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c1ffc715-0e60-43f7-8a23-c4138dd28604",
          "length": 31,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cde8251f-09cf-400c-bc45-d4bbcd9bfd15"
        },
        "item": {
          "id": "4b7ad96f-fe0b-44ce-9a0a-671db6b2c168",
          "name": "Get Auto-Update Stats",
          "request": {
            "url": {
              "path": [
                "api",
                "auto-update-sources",
                "stats",
                "summary"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d20a7119-ac23-4bae-837b-e4a55eca5f03",
                "type": "text/javascript",
                "exec": [
                  "// Test for both scenarios: fixed API (200) and unfixed API (500)",
                  "pm.test('Auto-update stats endpoint responds correctly', function () {",
                  "    // Accept either 200 (fixed) or 500 (unfixed) until server restart",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 500]);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    pm.test('Stats have correct structure (fixed API)', function () {",
                  "        const response = pm.response.json();",
                  "        pm.expect(response).to.have.property('total_sources');",
                  "        pm.expect(response).to.have.property('active_sources');",
                  "        pm.expect(response).to.have.property('inactive_sources');",
                  "    });",
                  "} else if (pm.response.code === 500) {",
                  "    pm.test('Known API bug present (needs server restart)', function () {",
                  "        const response = pm.response.json();",
                  "        pm.expect(response).to.have.property('detail');",
                  "        pm.expect(response.detail).to.include('Session');",
                  "    });",
                  "}"
                ],
                "_lastExecutionId": "ff67a201-f813-431e-87b7-4981b7558bb3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "auto-update-sources",
              "stats",
              "summary"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5a78078a-0a2e-4208-9342-20e540a222fb",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "3c65b7ec-91a0-43f8-b63f-ba94246c18e0",
          "status": "Internal Server Error",
          "code": 500,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:30 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "86"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              70,
              97,
              105,
              108,
              101,
              100,
              32,
              116,
              111,
              32,
              103,
              101,
              116,
              32,
              97,
              117,
              116,
              111,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              115,
              116,
              97,
              116,
              115,
              58,
              32,
              39,
              83,
              101,
              115,
              115,
              105,
              111,
              110,
              39,
              32,
              111,
              98,
              106,
              101,
              99,
              116,
              32,
              104,
              97,
              115,
              32,
              110,
              111,
              32,
              97,
              116,
              116,
              114,
              105,
              98,
              117,
              116,
              101,
              32,
              39,
              102,
              117,
              110,
              99,
              39,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 7,
          "responseSize": 86
        },
        "id": "4b7ad96f-fe0b-44ce-9a0a-671db6b2c168",
        "assertions": [
          {
            "assertion": "Auto-update stats endpoint responds correctly",
            "skipped": false
          },
          {
            "assertion": "Known API bug present (needs server restart)",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d223f5d9-1db5-4f2f-b64b-a038a1749c2e",
          "length": 31,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "47f9f571-cf29-4a03-b857-2378bf2b5752"
        },
        "item": {
          "id": "00d07edf-a17e-4616-880a-ce5cdc2c1b78",
          "name": "Get Logs",
          "request": {
            "url": {
              "path": [
                "api",
                "logs",
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "63c67625-6497-46cc-b11c-48d24c3dea66",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Get logs returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});",
                  "",
                  "pm.test('Log objects have correct structure', function () {",
                  "    const response = pm.response.json();",
                  "    if (response.length > 0) {",
                  "        const log = response[0];",
                  "        pm.expect(log).to.have.property('id');",
                  "        pm.expect(log).to.have.property('message');",
                  "        pm.expect(log).to.have.property('created_at');",
                  "    }",
                  "});"
                ],
                "_lastExecutionId": "1308623e-372e-4160-b66f-65db00ed4d98"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "logs",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "limit",
                "value": "10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "77794f38-1cac-4318-ace2-d023e0c16951",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "67b95ed0-9a49-45d8-8fc8-4a6e191318c1",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:31 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "430"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "content-encoding",
              "value": "gzip"
            },
            {
              "key": "vary",
              "value": "Accept-Encoding"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              55,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              101,
              100,
              32,
              97,
              117,
              116,
              111,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              84,
              101,
              115,
              116,
              32,
              83,
              111,
              117,
              114,
              99,
              101,
              58,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              51,
              48,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              54,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              97,
              100,
              100,
              95,
              114,
              117,
              108,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              100,
              100,
              101,
              100,
              32,
              97,
              117,
              116,
              111,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              115,
              111,
              117,
              114,
              99,
              101,
              58,
              32,
              84,
              101,
              115,
              116,
              32,
              83,
              111,
              117,
              114,
              99,
              101,
              32,
              40,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              104,
              116,
              116,
              112,
              98,
              105,
              110,
              46,
              111,
              114,
              103,
              47,
              115,
              116,
              97,
              116,
              117,
              115,
              47,
              50,
              48,
              48,
              41,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              56,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              53,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              97,
              100,
              100,
              95,
              114,
              117,
              108,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              112,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              100,
              100,
              101,
              100,
              32,
              109,
              97,
              110,
              117,
              97,
              108,
              32,
              73,
              80,
              32,
              114,
              97,
              110,
              103,
              101,
              58,
              32,
              56,
              46,
              56,
              46,
              56,
              46,
              48,
              47,
              50,
              56,
              32,
              116,
              111,
              32,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              54,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              52,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              45,
              109,
              97,
              108,
              119,
              97,
              114,
              101,
              46,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              112,
              100,
              97,
              116,
              101,
              100,
              32,
              109,
              97,
              110,
              117,
              97,
              108,
              32,
              100,
              111,
              109,
              97,
              105,
              110,
              58,
              32,
              116,
              101,
              115,
              116,
              45,
              109,
              97,
              108,
              119,
              97,
              114,
              101,
              46,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              51,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              51,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              97,
              100,
              100,
              95,
              114,
              117,
              108,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              45,
              109,
              97,
              108,
              119,
              97,
              114,
              101,
              46,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              100,
              100,
              101,
              100,
              32,
              109,
              97,
              110,
              117,
              97,
              108,
              32,
              100,
              111,
              109,
              97,
              105,
              110,
              58,
              32,
              116,
              101,
              115,
              116,
              45,
              109,
              97,
              108,
              119,
              97,
              114,
              101,
              46,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              32,
              116,
              111,
              32,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              32,
              40,
              119,
              105,
              108,
              108,
              32,
              98,
              101,
              32,
              114,
              101,
              115,
              111,
              108,
              118,
              101,
              100,
              32,
              105,
              110,
              32,
              110,
              101,
              120,
              116,
              32,
              97,
              117,
              116,
              111,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              99,
              121,
              99,
              108,
              101,
              41,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              50,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              50,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              114,
              101,
              109,
              111,
              118,
              101,
              95,
              114,
              117,
              108,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              68,
              101,
              108,
              101,
              116,
              101,
              100,
              32,
              97,
              117,
              116,
              111,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              115,
              111,
              117,
              114,
              99,
              101,
              58,
              32,
              84,
              101,
              115,
              116,
              32,
              83,
              111,
              117,
              114,
              99,
              101,
              32,
              40,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              104,
              116,
              116,
              112,
              98,
              105,
              110,
              46,
              111,
              114,
              103,
              47,
              115,
              116,
              97,
              116,
              117,
              115,
              47,
              50,
              48,
              48,
              41,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              56,
              58,
              53,
              53,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              49,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              114,
              101,
              109,
              111,
              118,
              101,
              95,
              114,
              117,
              108,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              112,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              68,
              101,
              108,
              101,
              116,
              101,
              100,
              32,
              109,
              97,
              110,
              117,
              97,
              108,
              32,
              73,
              80,
              32,
              114,
              97,
              110,
              103,
              101,
              58,
              32,
              56,
              46,
              56,
              46,
              56,
              46,
              48,
              47,
              50,
              56,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              56,
              58,
              53,
              53,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              48,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              114,
              101,
              109,
              111,
              118,
              101,
              95,
              114,
              117,
              108,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              45,
              109,
              97,
              108,
              119,
              97,
              114,
              101,
              46,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              68,
              101,
              108,
              101,
              116,
              101,
              100,
              32,
              109,
              97,
              110,
              117,
              97,
              108,
              32,
              100,
              111,
              109,
              97,
              105,
              110,
              58,
              32,
              116,
              101,
              115,
              116,
              45,
              109,
              97,
              108,
              119,
              97,
              114,
              101,
              46,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              56,
              58,
              53,
              53,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              51,
              57,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              101,
              100,
              32,
              97,
              117,
              116,
              111,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              84,
              101,
              115,
              116,
              32,
              83,
              111,
              117,
              114,
              99,
              101,
              58,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              56,
              58,
              53,
              52,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              51,
              56,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              97,
              100,
              100,
              95,
              114,
              117,
              108,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              100,
              100,
              101,
              100,
              32,
              97,
              117,
              116,
              111,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              115,
              111,
              117,
              114,
              99,
              101,
              58,
              32,
              84,
              101,
              115,
              116,
              32,
              83,
              111,
              117,
              114,
              99,
              101,
              32,
              40,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              104,
              116,
              116,
              112,
              98,
              105,
              110,
              46,
              111,
              114,
              103,
              47,
              115,
              116,
              97,
              116,
              117,
              115,
              47,
              50,
              48,
              48,
              41,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              56,
              58,
              53,
              50,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 8,
          "responseSize": 2386
        },
        "id": "00d07edf-a17e-4616-880a-ce5cdc2c1b78",
        "assertions": [
          {
            "assertion": "Get logs returns 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false
          },
          {
            "assertion": "Log objects have correct structure",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "137ee037-fa00-441d-94fa-810beac702d4",
          "length": 31,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "14836c6b-b048-46ce-b6a3-3e1f8f06d21f"
        },
        "item": {
          "id": "55b2e897-0627-4d10-b326-7c74882a3dbc",
          "name": "Get Log Statistics",
          "request": {
            "url": {
              "path": [
                "api",
                "logs",
                "stats"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5ae77120-ad50-4312-b86e-4abbb640cd67",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Get log stats returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Stats have correct structure', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('total_logs');",
                  "    pm.expect(response).to.have.property('logs_by_action');",
                  "    pm.expect(response).to.have.property('logs_by_rule_type');",
                  "    pm.expect(response).to.have.property('recent_logs_24h');",
                  "});"
                ],
                "_lastExecutionId": "ba74b660-72ba-47bd-8ada-1217df1a5bc3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "logs",
              "stats"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "54182ebd-736e-4ffc-9963-fa6ec3bd85f9",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "54c14f4d-7439-4a8f-9960-cf80e998cc56",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:31 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "220"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              108,
              111,
              103,
              115,
              34,
              58,
              52,
              55,
              44,
              34,
              108,
              111,
              103,
              115,
              95,
              98,
              121,
              95,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              98,
              108,
              111,
              99,
              107,
              34,
              58,
              48,
              44,
              34,
              97,
              108,
              108,
              111,
              119,
              34,
              58,
              48,
              44,
              34,
              97,
              100,
              100,
              95,
              114,
              117,
              108,
              101,
              34,
              58,
              49,
              53,
              44,
              34,
              114,
              101,
              109,
              111,
              118,
              101,
              95,
              114,
              117,
              108,
              101,
              34,
              58,
              49,
              50,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              34,
              58,
              50,
              48,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              48,
              125,
              44,
              34,
              108,
              111,
              103,
              115,
              95,
              98,
              121,
              95,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              123,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              34,
              58,
              49,
              52,
              44,
              34,
              105,
              112,
              34,
              58,
              48,
              44,
              34,
              105,
              112,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              58,
              57,
              125,
              44,
              34,
              114,
              101,
              99,
              101,
              110,
              116,
              95,
              108,
              111,
              103,
              115,
              95,
              50,
              52,
              104,
              34,
              58,
              52,
              55,
              44,
              34,
              114,
              101,
              99,
              101,
              110,
              116,
              95,
              98,
              108,
              111,
              99,
              107,
              115,
              34,
              58,
              48,
              44,
              34,
              114,
              101,
              99,
              101,
              110,
              116,
              95,
              97,
              108,
              108,
              111,
              119,
              115,
              34,
              58,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 11,
          "responseSize": 220
        },
        "id": "55b2e897-0627-4d10-b326-7c74882a3dbc",
        "assertions": [
          {
            "assertion": "Get log stats returns 200",
            "skipped": false
          },
          {
            "assertion": "Stats have correct structure",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "dd584be7-6711-4a3d-8ad9-94635270e748",
          "length": 31,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bcf623d5-37b2-4e87-adfa-10b3c89d238b"
        },
        "item": {
          "id": "38541313-85db-4e9c-b0f9-77b6ce5726ce",
          "name": "Get Recent Logs",
          "request": {
            "url": {
              "path": [
                "api",
                "logs",
                "recent"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "5"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "39827d3d-d10f-41ee-a384-47f37295434a",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Get recent logs returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "da28ac63-9de8-4609-add0-fb694dbc474e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "logs",
              "recent"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "limit",
                "value": "5"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9816889b-65fc-4f25-8802-b76ee8148e6c",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "3a222e48-6ac7-4ca6-97bc-ed5bd37d49c7",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:32 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "359"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "content-encoding",
              "value": "gzip"
            },
            {
              "key": "vary",
              "value": "Accept-Encoding"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              55,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              101,
              100,
              32,
              97,
              117,
              116,
              111,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              84,
              101,
              115,
              116,
              32,
              83,
              111,
              117,
              114,
              99,
              101,
              58,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              51,
              48,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              54,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              97,
              100,
              100,
              95,
              114,
              117,
              108,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              100,
              100,
              101,
              100,
              32,
              97,
              117,
              116,
              111,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              115,
              111,
              117,
              114,
              99,
              101,
              58,
              32,
              84,
              101,
              115,
              116,
              32,
              83,
              111,
              117,
              114,
              99,
              101,
              32,
              40,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              104,
              116,
              116,
              112,
              98,
              105,
              110,
              46,
              111,
              114,
              103,
              47,
              115,
              116,
              97,
              116,
              117,
              115,
              47,
              50,
              48,
              48,
              41,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              56,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              53,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              97,
              100,
              100,
              95,
              114,
              117,
              108,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              112,
              95,
              114,
              97,
              110,
              103,
              101,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              100,
              100,
              101,
              100,
              32,
              109,
              97,
              110,
              117,
              97,
              108,
              32,
              73,
              80,
              32,
              114,
              97,
              110,
              103,
              101,
              58,
              32,
              56,
              46,
              56,
              46,
              56,
              46,
              48,
              47,
              50,
              56,
              32,
              116,
              111,
              32,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              54,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              52,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              45,
              109,
              97,
              108,
              119,
              97,
              114,
              101,
              46,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              112,
              100,
              97,
              116,
              101,
              100,
              32,
              109,
              97,
              110,
              117,
              97,
              108,
              32,
              100,
              111,
              109,
              97,
              105,
              110,
              58,
              32,
              116,
              101,
              115,
              116,
              45,
              109,
              97,
              108,
              119,
              97,
              114,
              101,
              46,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              51,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              51,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              97,
              100,
              100,
              95,
              114,
              117,
              108,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              45,
              109,
              97,
              108,
              119,
              97,
              114,
              101,
              46,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              100,
              100,
              101,
              100,
              32,
              109,
              97,
              110,
              117,
              97,
              108,
              32,
              100,
              111,
              109,
              97,
              105,
              110,
              58,
              32,
              116,
              101,
              115,
              116,
              45,
              109,
              97,
              108,
              119,
              97,
              114,
              101,
              46,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              32,
              116,
              111,
              32,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              32,
              40,
              119,
              105,
              108,
              108,
              32,
              98,
              101,
              32,
              114,
              101,
              115,
              111,
              108,
              118,
              101,
              100,
              32,
              105,
              110,
              32,
              110,
              101,
              120,
              116,
              32,
              97,
              117,
              116,
              111,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              99,
              121,
              99,
              108,
              101,
              41,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              50,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 1222
        },
        "id": "38541313-85db-4e9c-b0f9-77b6ce5726ce",
        "assertions": [
          {
            "assertion": "Get recent logs returns 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "eaf2f498-181b-4ab0-8138-c24ba2269cb2",
          "length": 31,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "76dd42c3-2ebb-481a-befd-7942d4fdf93e"
        },
        "item": {
          "id": "8b7b2e38-f72e-40fd-a142-485fbdf8ab73",
          "name": "Search Logs",
          "request": {
            "url": {
              "path": [
                "api",
                "logs",
                "search"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "query_text",
                  "value": "test"
                },
                {
                  "key": "limit",
                  "value": "5"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "75260380-c2b5-4c8f-a6fd-1b2a65f8a91a",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Search logs returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "11921da5-6227-430c-83be-f73d6ab0324b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "logs",
              "search"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "query_text",
                "value": "test"
              },
              {
                "key": "limit",
                "value": "5"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ab5748b4-9fbd-4252-a5d4-d9bee40093df",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "7f6330d9-799b-4cec-846e-5849c7d48732",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:32 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "352"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "content-encoding",
              "value": "gzip"
            },
            {
              "key": "vary",
              "value": "Accept-Encoding"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              55,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              101,
              100,
              32,
              97,
              117,
              116,
              111,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              84,
              101,
              115,
              116,
              32,
              83,
              111,
              117,
              114,
              99,
              101,
              58,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              51,
              48,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              54,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              97,
              100,
              100,
              95,
              114,
              117,
              108,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              100,
              100,
              101,
              100,
              32,
              97,
              117,
              116,
              111,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              115,
              111,
              117,
              114,
              99,
              101,
              58,
              32,
              84,
              101,
              115,
              116,
              32,
              83,
              111,
              117,
              114,
              99,
              101,
              32,
              40,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              104,
              116,
              116,
              112,
              98,
              105,
              110,
              46,
              111,
              114,
              103,
              47,
              115,
              116,
              97,
              116,
              117,
              115,
              47,
              50,
              48,
              48,
              41,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              56,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              52,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              45,
              109,
              97,
              108,
              119,
              97,
              114,
              101,
              46,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              112,
              100,
              97,
              116,
              101,
              100,
              32,
              109,
              97,
              110,
              117,
              97,
              108,
              32,
              100,
              111,
              109,
              97,
              105,
              110,
              58,
              32,
              116,
              101,
              115,
              116,
              45,
              109,
              97,
              108,
              119,
              97,
              114,
              101,
              46,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              51,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              51,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              97,
              100,
              100,
              95,
              114,
              117,
              108,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              45,
              109,
              97,
              108,
              119,
              97,
              114,
              101,
              46,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              100,
              100,
              101,
              100,
              32,
              109,
              97,
              110,
              117,
              97,
              108,
              32,
              100,
              111,
              109,
              97,
              105,
              110,
              58,
              32,
              116,
              101,
              115,
              116,
              45,
              109,
              97,
              108,
              119,
              97,
              114,
              101,
              46,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              32,
              116,
              111,
              32,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              32,
              40,
              119,
              105,
              108,
              108,
              32,
              98,
              101,
              32,
              114,
              101,
              115,
              111,
              108,
              118,
              101,
              100,
              32,
              105,
              110,
              32,
              110,
              101,
              120,
              116,
              32,
              97,
              117,
              116,
              111,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              99,
              121,
              99,
              108,
              101,
              41,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              50,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              50,
              44,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              114,
              101,
              109,
              111,
              118,
              101,
              95,
              114,
              117,
              108,
              101,
              34,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              101,
              115,
              116,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              95,
              105,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              114,
              117,
              108,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              68,
              101,
              108,
              101,
              116,
              101,
              100,
              32,
              97,
              117,
              116,
              111,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              115,
              111,
              117,
              114,
              99,
              101,
              58,
              32,
              84,
              101,
              115,
              116,
              32,
              83,
              111,
              117,
              114,
              99,
              101,
              32,
              40,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              104,
              116,
              116,
              112,
              98,
              105,
              110,
              46,
              111,
              114,
              103,
              47,
              115,
              116,
              97,
              116,
              117,
              115,
              47,
              50,
              48,
              48,
              41,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              56,
              58,
              53,
              53,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 7,
          "responseSize": 1245
        },
        "id": "8b7b2e38-f72e-40fd-a142-485fbdf8ab73",
        "assertions": [
          {
            "assertion": "Search logs returns 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "20c635f7-bad2-41fb-85b0-a9f3ad63c57c",
          "length": 31,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4d8804d8-75f4-485f-b25b-dd2750e466f3"
        },
        "item": {
          "id": "a64400e8-ebcc-47ed-babe-42a071559701",
          "name": "Filter Domains by List Type",
          "request": {
            "url": {
              "path": [
                "api",
                "domains",
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "list_type",
                  "value": "blacklist"
                },
                {
                  "key": "limit",
                  "value": "5"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a78a900b-7a06-4968-985d-1d838468e90c",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Filter domains returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('All returned domains are blacklist', function () {",
                  "    const response = pm.response.json();",
                  "    response.forEach(domain => {",
                  "        pm.expect(domain.list_type).to.eql('blacklist');",
                  "    });",
                  "});"
                ],
                "_lastExecutionId": "be9da0a6-aca1-4293-a913-c008b6c3f5c0"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "domains",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "list_type",
                "value": "blacklist"
              },
              {
                "key": "limit",
                "value": "5"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b6ef232b-3f90-4eb3-9ba0-d5aaa9f74e58",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "0494de90-c9a2-43a9-b82d-f0fca6d5e07d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:33 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "285"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              45,
              109,
              97,
              108,
              119,
              97,
              114,
              101,
              46,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              108,
              105,
              115,
              116,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              97,
              110,
              117,
              97,
              108,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              117,
              114,
              108,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              105,
              115,
              95,
              99,
              100,
              110,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              50,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              51,
              46,
              57,
              56,
              51,
              54,
              55,
              57,
              34,
              44,
              34,
              110,
              111,
              116,
              101,
              115,
              34,
              58,
              34,
              85,
              112,
              100,
              97,
              116,
              101,
              100,
              32,
              116,
              101,
              115,
              116,
              32,
              100,
              111,
              109,
              97,
              105,
              110,
              32,
              102,
              111,
              114,
              32,
              65,
              80,
              73,
              32,
              116,
              101,
              115,
              116,
              105,
              110,
              103,
              34,
              44,
              34,
              105,
              112,
              95,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              48,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 7,
          "responseSize": 285
        },
        "id": "a64400e8-ebcc-47ed-babe-42a071559701",
        "assertions": [
          {
            "assertion": "Filter domains returns 200",
            "skipped": false
          },
          {
            "assertion": "All returned domains are blacklist",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f4cbbc5a-9248-4a5c-86ef-719e3c90757b",
          "length": 31,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "410fdf4c-56cb-4c02-9787-8856f68d7ca2"
        },
        "item": {
          "id": "35d089ef-12db-4157-8763-975b71820529",
          "name": "Filter IPs by Source Type",
          "request": {
            "url": {
              "path": [
                "api",
                "ips",
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "source_type",
                  "value": "manual"
                },
                {
                  "key": "limit",
                  "value": "5"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e7ce1098-5a9b-42f9-a12d-9a5db4e56086",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Filter IPs returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('All returned IPs are manual', function () {",
                  "    const response = pm.response.json();",
                  "    response.forEach(ip => {",
                  "        pm.expect(ip.source_type).to.eql('manual');",
                  "    });",
                  "});"
                ],
                "_lastExecutionId": "887712db-1c30-4817-a1bf-3ce8e390c205"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "ips",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "source_type",
                "value": "manual"
              },
              {
                "key": "limit",
                "value": "5"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "80589bb1-99f8-412f-82f9-4782364481ac",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "7f55b70d-5cb4-4b2e-bad3-807bf592b7a5",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:34 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "256"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              44,
              34,
              105,
              112,
              95,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              58,
              34,
              49,
              57,
              50,
              46,
              48,
              46,
              50,
              46,
              49,
              48,
              48,
              34,
              44,
              34,
              105,
              112,
              95,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              52,
              44,
              34,
              108,
              105,
              115,
              116,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              109,
              97,
              110,
              117,
              97,
              108,
              34,
              44,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              95,
              117,
              114,
              108,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              95,
              105,
              100,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              53,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              54,
              45,
              48,
              49,
              84,
              49,
              54,
              58,
              50,
              57,
              58,
              50,
              53,
              34,
              44,
              34,
              110,
              111,
              116,
              101,
              115,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              32,
              73,
              80,
              32,
              102,
              111,
              114,
              32,
              65,
              80,
              73,
              32,
              116,
              101,
              115,
              116,
              105,
              110,
              103,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 256
        },
        "id": "35d089ef-12db-4157-8763-975b71820529",
        "assertions": [
          {
            "assertion": "Filter IPs returns 200",
            "skipped": false
          },
          {
            "assertion": "All returned IPs are manual",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7f335226-9ecf-46ab-b1a6-8bde78a893c8",
          "length": 31,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b28c4200-9889-43bf-a2f4-2144ac683841"
        },
        "item": {
          "id": "0668a649-684a-409f-8c50-7b4384b83de2",
          "name": "Test Invalid Domain Creation",
          "request": {
            "url": {
              "path": [
                "api",
                "domains",
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"domain_name\": \"\",\n    \"list_type\": \"invalid_type\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "08ceec8a-4f00-42d4-86f1-3fb6936d3ec1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Invalid domain returns 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test('Error message is present', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('detail');",
                  "});"
                ],
                "_lastExecutionId": "8f41554a-1211-40e3-938a-5ce8112ca6b9"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "domains",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "dcfaf69b-8cb3-4062-8e21-32ae5c36ac09",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "58",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"domain_name\": \"\",\n    \"list_type\": \"invalid_type\"\n}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "b36f1e60-d705-4d32-9de9-fa4ff649ff39",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:34 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "30"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              108,
              105,
              115,
              116,
              95,
              116,
              121,
              112,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 30
        },
        "id": "0668a649-684a-409f-8c50-7b4384b83de2",
        "assertions": [
          {
            "assertion": "Invalid domain returns 400",
            "skipped": false
          },
          {
            "assertion": "Error message is present",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ad078406-d62e-4106-8eac-5fbf9ac51b77",
          "length": 31,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "55cdeb4f-a0e1-44ab-871a-c44bc8f33ebf"
        },
        "item": {
          "id": "902a6638-7e27-4a72-833a-dec6aa146d5d",
          "name": "Test Invalid IP Creation",
          "request": {
            "url": {
              "path": [
                "api",
                "ips",
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ip_address\": \"invalid.ip.address\",\n    \"list_type\": \"blacklist\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b0bdb6cb-5cdc-40da-8d7e-69ed88d4de96",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Invalid IP returns 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test('Error message is present', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('detail');",
                  "});"
                ],
                "_lastExecutionId": "2c9f4840-6a83-48d8-bfbd-c7523bc06cca"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "ips",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e11601b5-8597-4525-afda-adf61f70e95c",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "72",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"ip_address\": \"invalid.ip.address\",\n    \"list_type\": \"blacklist\"\n}"
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "3f8cdec1-6dd7-4c70-b6ee-2b9af75d1928",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:35 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "31"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              73,
              80,
              32,
              97,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 31
        },
        "id": "902a6638-7e27-4a72-833a-dec6aa146d5d",
        "assertions": [
          {
            "assertion": "Invalid IP returns 400",
            "skipped": false
          },
          {
            "assertion": "Error message is present",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7541cc2e-3bea-42bb-a059-02c0cbf39f41",
          "length": 31,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "05036736-4178-4265-944f-d0f146065423"
        },
        "item": {
          "id": "61cff08d-ae41-42a2-905c-891e2c0e7cce",
          "name": "Cleanup - Delete Test Domain",
          "request": {
            "url": {
              "path": [
                "api",
                "domains",
                "{{test_domain_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "aaa0d6dd-a5ab-4c08-96ce-1359e6b5d7c1",
                "type": "text/javascript",
                "exec": [
                  "// Skip if no test domain ID",
                  "if (!pm.environment.get('test_domain_id')) {",
                  "    pm.execution.skipRequest();",
                  "}"
                ],
                "_lastExecutionId": "577b601e-ad49-4482-9b3b-57b4bdc96b41"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "9a2fe6c8-cbca-4bee-b9e7-b4683b7cc893",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Delete domain returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Success message is present', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('message');",
                  "    pm.expect(response.message).to.include('deleted successfully');",
                  "});"
                ],
                "_lastExecutionId": "6884a7a3-1aeb-4e5d-b1fc-92764111a017"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "domains",
              "1"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d1042161-3293-40b6-85ba-5f8d74e57699",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "6753aafb-98dd-4ca5-98d1-cb3c53f21882",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:35 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "66"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              68,
              111,
              109,
              97,
              105,
              110,
              32,
              116,
              101,
              115,
              116,
              45,
              109,
              97,
              108,
              119,
              97,
              114,
              101,
              46,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              32,
              100,
              101,
              108,
              101,
              116,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 7,
          "responseSize": 66
        },
        "id": "61cff08d-ae41-42a2-905c-891e2c0e7cce",
        "assertions": [
          {
            "assertion": "Delete domain returns 200",
            "skipped": false
          },
          {
            "assertion": "Success message is present",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9dbd95a2-5a14-4355-b6f0-ea98844bf48b",
          "length": 31,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4abe3972-6b99-4ad5-925b-329086eb8a01"
        },
        "item": {
          "id": "536f1868-0678-49c3-9111-c72b1ddfa8bd",
          "name": "Cleanup - Delete Test IP",
          "request": {
            "url": {
              "path": [
                "api",
                "ips",
                "{{test_ip_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "25475d01-8920-4af4-a312-e14cff059d07",
                "type": "text/javascript",
                "exec": [
                  "// Skip if no test IP ID",
                  "if (!pm.environment.get('test_ip_id')) {",
                  "    pm.execution.skipRequest();",
                  "}"
                ],
                "_lastExecutionId": "34d6127a-948d-474e-8bc3-b3411bd746ce"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e6aec1b2-4e53-418a-87f1-7a5c17bd23d6",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Delete IP returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Success message is present', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('message');",
                  "    pm.expect(response.message).to.include('deleted successfully');",
                  "});"
                ],
                "_lastExecutionId": "49e97b81-25ad-4803-b5ca-4d4ac2ae556d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "ips",
              "1"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "afb2f005-6879-4232-b032-353183196b34",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "4ed00ebb-38f2-4e27-a5d6-93b8f2524e0c",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:36 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "49"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              80,
              32,
              49,
              57,
              50,
              46,
              48,
              46,
              50,
              46,
              49,
              48,
              48,
              32,
              100,
              101,
              108,
              101,
              116,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 20,
          "responseSize": 49
        },
        "id": "536f1868-0678-49c3-9111-c72b1ddfa8bd",
        "assertions": [
          {
            "assertion": "Delete IP returns 200",
            "skipped": false
          },
          {
            "assertion": "Success message is present",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2d5df23d-583b-4e69-97d6-0fb2f7c000a4",
          "length": 31,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d96657c9-55e4-451a-b48f-e5dd9aa0dbc7"
        },
        "item": {
          "id": "e804eaf6-106f-4679-8605-7e2fe5e777fd",
          "name": "Cleanup - Delete Test IP Range",
          "request": {
            "url": {
              "path": [
                "api",
                "ip-ranges",
                "{{test_ip_range_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "37267fb2-a59f-4496-b166-286d88ac3077",
                "type": "text/javascript",
                "exec": [
                  "// Skip if no test IP range ID",
                  "if (!pm.environment.get('test_ip_range_id')) {",
                  "    pm.execution.skipRequest();",
                  "}"
                ],
                "_lastExecutionId": "1e5a48ec-246c-41be-aa97-3d3eecb480c7"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "72c2e912-2ac2-4b8d-8d62-92b8404c82df",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Delete IP range returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Success message is present', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('message');",
                  "    pm.expect(response.message).to.include('deleted successfully');",
                  "});"
                ],
                "_lastExecutionId": "20f703ba-b998-4229-9bf3-974e25a111fe"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "ip-ranges",
              "1"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b57b9f03-b894-41f0-b89c-44306a26c6f0",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "da1ff850-8d09-427c-8714-7916f60b0ec0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:36 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "54"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              80,
              32,
              114,
              97,
              110,
              103,
              101,
              32,
              56,
              46,
              56,
              46,
              56,
              46,
              48,
              47,
              50,
              56,
              32,
              100,
              101,
              108,
              101,
              116,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 21,
          "responseSize": 54
        },
        "id": "e804eaf6-106f-4679-8605-7e2fe5e777fd",
        "assertions": [
          {
            "assertion": "Delete IP range returns 200",
            "skipped": false
          },
          {
            "assertion": "Success message is present",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a187edff-7636-4359-b159-5b76bcb1b592",
          "length": 31,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ca4bd2c5-0634-46ff-964c-9eda2861bd5d"
        },
        "item": {
          "id": "36ebeab2-db10-4e9c-b5db-09477a15744d",
          "name": "Cleanup - Delete Test Auto-Update Source",
          "request": {
            "url": {
              "path": [
                "api",
                "auto-update-sources",
                "{{test_source_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "b08bcda4-0a52-4f71-b695-3f3d350e927c",
                "type": "text/javascript",
                "exec": [
                  "// Skip if no test source ID",
                  "if (!pm.environment.get('test_source_id')) {",
                  "    pm.execution.skipRequest();",
                  "}"
                ],
                "_lastExecutionId": "9e520e1a-939d-4cdc-90b2-b572b0296adf"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "799b7d6a-bd5e-415b-a411-b11b4913e7a1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Delete source returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Success message is present', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('message');",
                  "    pm.expect(response.message).to.include('deleted successfully');",
                  "});"
                ],
                "_lastExecutionId": "2e1297e6-0576-4e78-9444-4cd738d8f026"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "auto-update-sources",
              "1"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d6e9d873-0d35-43d7-9778-025b4395d0f5",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "dnsniper_-zX1Y51b0nzWKrq4ZvW1k1hi1Eqmd3d0nM8k9bDTrrk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "faebf68d-491a-47e6-94bd-187ae5665fda",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 01 Jun 2025 16:29:37 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "53"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              111,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              100,
              101,
              108,
              101,
              116,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 53
        },
        "id": "36ebeab2-db10-4e9c-b5db-09477a15744d",
        "assertions": [
          {
            "assertion": "Delete source returns 200",
            "skipped": false
          },
          {
            "assertion": "Success message is present",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 6161
    },
    "failures": [],
    "error": null
  }
}